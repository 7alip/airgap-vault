{"version":3,"sources":["./src/app/pages/secret-generate-coin-flip/secret-generate-coin-flip-routing.module.ts","./src/app/services/coin-flip/coin-flip.service.ts","./src/app/pages/secret-generate-coin-flip/secret-generate-coin-flip.page.ts","./src/app/pages/secret-generate-coin-flip/secret-generate-coin-flip.page.html","./src/app/pages/secret-generate-coin-flip/secret-generate-coin-flip.module.ts"],"names":[],"mappings":"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","file":"pages-secret-generate-coin-flip-secret-generate-coin-flip-module.js","sourcesContent":["import { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\n\nimport { SecretGenerateCoinFlipPage } from './secret-generate-coin-flip.page'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SecretGenerateCoinFlipPage\n  }\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SecretGenerateCoinFlipPageRoutingModule {}\n","import { Injectable } from '@angular/core'\nimport { toHexString } from 'src/app/utils/utils'\n\nfunction binaryToByte(bin: string): number {\n  return parseInt(bin, 2)\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CoinFlipService {\n  constructor() {}\n\n  async validateInput(binaryEntropy: string): Promise<boolean> {\n    if (typeof binaryEntropy !== 'string') {\n      throw Error('Input needs to be a string')\n    }\n    if (binaryEntropy.length !== 256) {\n      throw Error('Input length needs to be exactly 256')\n    }\n    if (!binaryEntropy.split('').every((c) => '01'.includes(c))) {\n      throw Error('Input can only contain \"0\" or \"1\"')\n    }\n\n    return true\n  }\n\n  async getEntropyFromInput(binaryEntropy: string): Promise<string> {\n    if (!(await this.validateInput(binaryEntropy))) {\n      throw new Error('Invalid Coin Flip')\n    }\n\n    const entropyBytes = binaryEntropy.match(/(.{1,8})/g).map(binaryToByte)\n\n    const entropy = toHexString(new Uint8Array(entropyBytes))\n\n    console.log('entropy', entropy)\n\n    return entropy\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core'\nimport { IonContent } from '@ionic/angular'\nimport { MnemonicSecret } from 'src/app/models/secret'\nimport { CoinFlipService } from 'src/app/services/coin-flip/coin-flip.service'\nimport { ErrorCategory, handleErrorLocal } from 'src/app/services/error-handler/error-handler.service'\nimport { NavigationService } from 'src/app/services/navigation/navigation.service'\n\n@Component({\n  selector: 'airgap-secret-generate-coin-flip',\n  templateUrl: './secret-generate-coin-flip.page.html',\n  styleUrls: ['./secret-generate-coin-flip.page.scss']\n})\nexport class SecretGenerateCoinFlipPage implements OnInit {\n  @ViewChild(IonContent, { static: false }) content: IonContent\n\n  public isValid: boolean = false\n\n  public minLength: number = 256\n  public maxLength: number = 256\n\n  public error: string = ''\n\n  private entropy: string = ''\n\n  constructor(private readonly navigationService: NavigationService, private readonly coinFlipService: CoinFlipService) {}\n\n  ngOnInit() {}\n\n  async next() {\n    const entropy = await this.coinFlipService.getEntropyFromInput(this.entropy)\n\n    const secret: MnemonicSecret = new MnemonicSecret(entropy)\n\n    this.navigationService.routeWithState('secret-rules', { secret }).catch(handleErrorLocal(ErrorCategory.IONIC_NAVIGATION))\n  }\n\n  async updateEntropy(input: string) {\n    this.entropy = input\n    this.validateEntropy()\n  }\n\n  async validateEntropy() {\n    if (this.entropy.length !== 256) {\n      this.isValid = false\n      this.error = ''\n      return\n    }\n\n    try {\n      this.isValid = await this.coinFlipService.validateInput(this.entropy)\n    } catch (e) {\n      this.isValid = false\n      this.error = e\n    }\n  }\n\n  scrollToBottom() {\n    this.content.scrollToBottom(500)\n  }\n}\n","<ion-header class=\"ion-no-border\">\n  <ion-toolbar color=\"secondary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"/tabs/tab-settings\"></ion-back-button>\n    </ion-buttons>\n\n    <ion-title>{{ 'secret-generate-coin-flip.title' | translate }}</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"ion-padding-horizontal\">\n  <p class=\"ion-padding-bottom\">\n    {{ 'secret-generate-coin-flip.description' | translate }}\n  </p>\n\n  <airgap-grid-input\n    #inputgrid\n    [minLength]=\"minLength\"\n    [maxLength]=\"maxLength\"\n    [gridWidth]=\"8\"\n    [defaultHeight]=\"32\"\n    (rowAddedEvent)=\"scrollToBottom()\"\n    (entropyChanged)=\"updateEntropy($event)\"\n  ></airgap-grid-input>\n</ion-content>\n\n<ion-footer class=\"ion-no-border\">\n  <ion-toolbar>\n    <ion-row class=\"ion-padding\">\n      <ion-col size=\"12\">\n        <p>{{error}}</p>\n      </ion-col>\n\n      <ion-col size=\"12\">\n        {{ 'secret-generate-coin-flip.status' | translate: { inputLength: inputgrid.entropy.length } }}\n      </ion-col>\n\n      <ion-col size=\"12\">\n        <ion-row class=\"button--rounded ion-justify-content-between\">\n          <div>\n            <ion-button shape=\"round\" [disabled]=\"inputgrid.entropy.length >= this.maxLength\" (click)=\"inputgrid.add('0')\">\n              {{ 'secret-generate-coin-flip.head' | translate }}\n            </ion-button>\n            <ion-button shape=\"round\" [disabled]=\"inputgrid.entropy.length >= this.maxLength\" (click)=\"inputgrid.add('1')\">\n              {{ 'secret-generate-coin-flip.tail' | translate }}\n            </ion-button>\n          </div>\n\n          <div>\n            <ion-button color=\"tertiary\" [disabled]=\"inputgrid.entropy.length === 0\" (click)=\"inputgrid.remove()\">\n              <ion-icon name=\"trash-outline\"></ion-icon>\n            </ion-button>\n            <ion-button color=\"tertiary\" [disabled]=\"!this.isValid\" (click)=\"next()\">\n              <ion-icon name=\"chevron-forward-circle-outline\"></ion-icon>\n            </ion-button>\n          </div>\n        </ion-row>\n        <ion-row></ion-row>\n      </ion-col>\n    </ion-row>\n  </ion-toolbar>\n</ion-footer>\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { FormsModule } from '@angular/forms'\n\nimport { IonicModule } from '@ionic/angular'\n\nimport { SecretGenerateCoinFlipPageRoutingModule } from './secret-generate-coin-flip-routing.module'\n\nimport { SecretGenerateCoinFlipPage } from './secret-generate-coin-flip.page'\nimport { TranslateModule } from '@ngx-translate/core'\nimport { ComponentsModule } from 'src/app/components/components.module'\n\n@NgModule({\n  imports: [CommonModule, ComponentsModule, FormsModule, IonicModule, SecretGenerateCoinFlipPageRoutingModule, TranslateModule],\n  declarations: [SecretGenerateCoinFlipPage]\n})\nexport class SecretGenerateCoinFlipPageModule {}\n"],"sourceRoot":"webpack:///"}