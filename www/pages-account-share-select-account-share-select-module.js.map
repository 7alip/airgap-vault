{"version":3,"sources":["./src/app/pages/account-share-select/account-share-select.actions.ts","./src/app/pages/account-share-select/account-share-select.effects.ts","./src/app/pages/account-share-select/account-share-select-routing.module.ts","./src/app/pages/account-share-select/account-share-select.reducers.ts","./src/app/pages/account-share-select/account-share-select.module.ts","./src/app/pages/account-share-select/account-share-select.page.ts","./src/app/pages/account-share-select/account-share-select.page.html"],"names":[],"mappings":"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","file":"pages-account-share-select-account-share-select-module.js","sourcesContent":["import { IACMessageDefinitionObjectV3 } from '@airgap/coinlib-core'\nimport { createAction, props } from '@ngrx/store'\n\nimport { MnemonicSecret } from '../../models/secret'\n\nconst featureName = 'Account Share Select'\n\n/**************** View Lifecycle ****************/\n\nexport const viewInitialization = createAction(`[${featureName}] View Initialization`)\nexport const initialDataLoaded = createAction(`[${featureName}] Initial Data Loaded`, props<{ secrets: MnemonicSecret[] }>())\n\n/**************** User Interaction ****************/\n\nexport const secretToggled = createAction(`[${featureName}] Secret Toggled`, props<{ secretId: string }>())\nexport const syncButtonClicked = createAction(`[${featureName}] Sync Button Clicked`)\n\nexport const alertDismissed = createAction(`[${featureName}] Alert Dismissed`, props<{ id: string }>())\n\nexport const migrationAlertAccepted = createAction(\n  `[${featureName}] Migration Alert Accepted`,\n  props<{ shareUrl: IACMessageDefinitionObjectV3[] }>()\n)\n\n/**************** Internal ****************/\n\nexport const walletsNotMigrated = createAction(`[${featureName}] Wallets Not Migrated`)\n\nexport const shareUrlGenerated = createAction(`[${featureName}] Share URL Generated`, props<{ shareUrl: IACMessageDefinitionObjectV3[] }>())\nexport const shareUrlGeneratedExcludedLegacy = createAction(\n  `[${featureName}] Share URL Generated (Legacy Accounts Excluded)`,\n  props<{ shareUrl: IACMessageDefinitionObjectV3[] }>()\n)\n","import { IACMessageDefinitionObjectV3 } from '@airgap/coinlib-core'\nimport { Injectable } from '@angular/core'\nimport { Actions, createEffect, ofType } from '@ngrx/effects'\nimport { Action, Store } from '@ngrx/store'\nimport { from, of } from 'rxjs'\nimport { filter, first, switchMap, tap, withLatestFrom } from 'rxjs/operators'\n\nimport { MnemonicSecret } from '../../models/secret'\nimport { InteractionOperationType, InteractionService } from '../../services/interaction/interaction.service'\nimport { MigrationService } from '../../services/migration/migration.service'\nimport { SecretsService } from '../../services/secrets/secrets.service'\nimport { ShareUrlService } from '../../services/share-url/share-url.service'\n\nimport * as actions from './account-share-select.actions'\nimport * as fromAccountShareSelect from './account-share-select.reducers'\n\n@Injectable()\nexport class AccountShareSelectEffects {\n  public secrets$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(actions.viewInitialization),\n      withLatestFrom(this.secretsService.getSecretsObservable()),\n      switchMap(([_, secrets]) => of(actions.initialDataLoaded({ secrets })))\n    )\n  )\n\n  public shareUrl$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(actions.syncButtonClicked),\n      withLatestFrom(this.store.select(fromAccountShareSelect.selectCheckedSecrets)),\n      filter(([_, checkedSecrets]) => checkedSecrets.length > 0),\n      switchMap(([_, checkedSecrets]) => from(this.generateShareUrl(checkedSecrets)).pipe(first()))\n    )\n  )\n\n  public sync$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(actions.shareUrlGenerated, actions.migrationAlertAccepted),\n        tap((action) => {\n          this.syncAccounts(action.shareUrl as IACMessageDefinitionObjectV3[]) // JGD remove typecast\n        })\n      ),\n    { dispatch: false }\n  )\n\n  constructor(\n    private readonly actions$: Actions,\n    private readonly store: Store<fromAccountShareSelect.State>,\n    private readonly secretsService: SecretsService,\n    private readonly shareUrlService: ShareUrlService,\n    private readonly interactionService: InteractionService,\n    private readonly migrationService: MigrationService\n  ) {}\n\n  private async generateShareUrl(secrets: MnemonicSecret[]): Promise<Action> {\n    await this.migrationService.runSecretsMigration(secrets)\n    const [migratedSecrets, allMigrated]: [MnemonicSecret[], boolean] = this.migrationService.deepFilterMigratedSecretsAndWallets(secrets)\n    if (migratedSecrets.length === 0) {\n      return actions.walletsNotMigrated()\n    }\n\n    const shareUrl: IACMessageDefinitionObjectV3[] = await this.shareUrlService.generateShareSecretsURL(migratedSecrets)\n\n    return allMigrated ? actions.shareUrlGenerated({ shareUrl }) : actions.shareUrlGeneratedExcludedLegacy({ shareUrl })\n  }\n\n  private syncAccounts(shareUrl: IACMessageDefinitionObjectV3[]): void {\n    this.interactionService.startInteraction({\n      operationType: InteractionOperationType.WALLET_SYNC,\n      iacMessage: shareUrl\n    })\n  }\n}\n","import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nimport { AccountShareSelectPage } from './account-share-select.page'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AccountShareSelectPage\n  }\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AccountShareSelectPageRoutingModule {}\n","import { generateGUID, UIAction, UIActionStatus, UIResource, UIResourceStatus } from '@airgap/angular-core'\nimport { createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store'\n\nimport * as fromRoot from '../../app.reducers'\nimport { MnemonicSecret } from '../../models/secret'\n\nimport * as actions from './account-share-select.actions'\nimport { Alert, ExcludedLegacyAccountsAlert, WalletsNotMigratedAlert } from './account-share-select.types'\n\n/**************** STATE ****************/\n\nexport interface FeatureState {\n  // TODO: move secrets to a global state\n  secrets: UIResource<MnemonicSecret[]>\n  checkedIds: string[]\n\n  alert: UIAction<Alert> | undefined\n}\n\nexport interface State extends fromRoot.State {\n  accountShareSelect: FeatureState\n}\n\n/**************** Reducers ****************/\n\nexport const initialState: FeatureState = {\n  secrets: {\n    status: UIResourceStatus.IDLE,\n    value: []\n  },\n  checkedIds: [],\n\n  alert: undefined\n}\n\nexport const reducer = createReducer(\n  initialState,\n  on(actions.initialDataLoaded, (state, { secrets }) => ({\n    ...state,\n    secrets: {\n      status: UIResourceStatus.SUCCESS,\n      value: secrets\n    },\n    checkedIds: secrets.map((secret: MnemonicSecret) => secret.id)\n  })),\n  on(actions.secretToggled, (state, { secretId }) => {\n    const foundIndex: number = state.checkedIds.indexOf(secretId)\n\n    return {\n      ...state,\n      checkedIds:\n        foundIndex > -1\n          ? state.checkedIds.slice(0, foundIndex).concat(state.checkedIds.slice(foundIndex + 1))\n          : [...state.checkedIds, secretId]\n    }\n  }),\n  on(actions.walletsNotMigrated, (state) => ({\n    ...state,\n    alert: {\n      id: generateGUID(),\n      value: { type: 'walletsNotMigrated' as WalletsNotMigratedAlert['type'] },\n      status: UIActionStatus.PENDING\n    }\n  })),\n  on(actions.shareUrlGeneratedExcludedLegacy, (state, { shareUrl }) => ({\n    ...state,\n    alert: {\n      id: generateGUID(),\n      value: {\n        type: 'excludedLegacyAccounts' as ExcludedLegacyAccountsAlert['type'],\n        shareUrl\n      },\n      status: UIActionStatus.PENDING\n    }\n  })),\n  on(actions.alertDismissed, (state, { id }) => ({\n    ...state,\n    alert:\n      state.alert !== undefined\n        ? {\n            id: state.alert.id,\n            value: state.alert.value,\n            status: id === state.alert.id ? UIActionStatus.HANDLED : state.alert.status\n          }\n        : undefined\n  }))\n)\n\n/**************** Selectors ****************/\n\nexport const selectFeatureState = createFeatureSelector<State, FeatureState>('accountShareSelect')\n\nexport const selectSecrets = createSelector(\n  selectFeatureState,\n  (state: FeatureState): UIResource<MnemonicSecret[]> => ({\n    status: state.secrets.status,\n    value: state.secrets.value?.filter((secret: MnemonicSecret) => secret.wallets.length > 0)\n  })\n)\nexport const selectCheckedIds = createSelector(selectFeatureState, (state: FeatureState): string[] => state.checkedIds)\nexport const selectAlert = createSelector(selectFeatureState, (state: FeatureState): UIAction<Alert> | undefined => state.alert)\n\nexport const selectCheckedSecrets = createSelector(\n  selectSecrets,\n  selectCheckedIds,\n  (secrets: UIResource<MnemonicSecret[]>, checked: string[]): MnemonicSecret[] => {\n    if (secrets.value === undefined || secrets.value.length === 0) {\n      return []\n    }\n\n    const checkedSet: Set<string> = new Set(checked)\n\n    return secrets.value.filter((secret: MnemonicSecret) => checkedSet.has(secret.id))\n  }\n)\nexport const selectIsSecretChecked = createSelector(\n  selectSecrets,\n  selectCheckedIds,\n  (secrets: UIResource<MnemonicSecret[]>, checked: string[]): Record<string, boolean> => {\n    if (secrets.value === undefined || secrets.value.length === 0) {\n      return {}\n    }\n\n    const checkedSet: Set<string> = new Set(checked)\n\n    return secrets.value.reduce(\n      (record: Record<string, boolean>, next: MnemonicSecret) => Object.assign(record, { [next.id]: checkedSet.has(next.id) }),\n      {}\n    )\n  }\n)\n\nexport const selectSyncEnabled = createSelector(selectCheckedIds, (checked: string[]): boolean => checked.length > 0)\n","import { AirGapAngularCoreModule } from '@airgap/angular-core'\nimport { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { IonicModule } from '@ionic/angular'\nimport { EffectsModule } from '@ngrx/effects'\nimport { StoreModule } from '@ngrx/store'\nimport { TranslateModule } from '@ngx-translate/core'\n\nimport { ComponentsModule } from '../../components/components.module'\n\nimport { AccountShareSelectPageRoutingModule } from './account-share-select-routing.module'\nimport { AccountShareSelectEffects } from './account-share-select.effects'\nimport { AccountShareSelectPage } from './account-share-select.page'\nimport * as fromAccountShareSelect from './account-share-select.reducers'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ComponentsModule,\n    FormsModule,\n    IonicModule,\n    TranslateModule,\n    AccountShareSelectPageRoutingModule,\n    StoreModule.forFeature('accountShareSelect', fromAccountShareSelect.reducer),\n    EffectsModule.forFeature([AccountShareSelectEffects]),\n    AirGapAngularCoreModule\n  ],\n  declarations: [AccountShareSelectPage]\n})\nexport class AccountShareSelectPageModule {}\n","import { UIAction, UIActionStatus, UiEventService, UIResource, UIResourceStatus } from '@airgap/angular-core'\nimport { AirGapWalletStatus, IACMessageDefinitionObjectV3 } from '@airgap/coinlib-core'\nimport { Component, OnDestroy } from '@angular/core'\nimport { AlertOptions } from '@ionic/core'\nimport { Store } from '@ngrx/store'\nimport { Observable, Subject } from 'rxjs'\nimport { takeUntil } from 'rxjs/operators'\n\nimport { MnemonicSecret } from '../../models/secret'\nimport { ErrorCategory, handleErrorLocal } from '../../services/error-handler/error-handler.service'\n\nimport * as actions from './account-share-select.actions'\nimport * as fromAccountShareSelect from './account-share-select.reducers'\nimport { Alert } from './account-share-select.types'\n\n@Component({\n  selector: 'airgap-account-share-select',\n  templateUrl: './account-share-select.page.html',\n  styleUrls: ['./account-share-select.page.scss']\n})\nexport class AccountShareSelectPage implements OnDestroy {\n  public readonly secrets$: Observable<UIResource<MnemonicSecret[]>>\n  public readonly isChecked$: Observable<Record<string, boolean>>\n\n  public readonly syncEnabled$: Observable<boolean>\n\n  public readonly alert$: Observable<UIAction<Alert> | undefined>\n\n  public readonly UIResourceStatus: typeof UIResourceStatus = UIResourceStatus\n  public readonly AirGapWalletStatus: typeof AirGapWalletStatus = AirGapWalletStatus\n\n  private alertElement: HTMLIonAlertElement\n\n  private readonly ngDestroyed$: Subject<void> = new Subject()\n\n  constructor(private readonly store: Store<fromAccountShareSelect.State>, private readonly uiEventService: UiEventService) {\n    this.secrets$ = this.store.select(fromAccountShareSelect.selectSecrets)\n    this.isChecked$ = this.store.select(fromAccountShareSelect.selectIsSecretChecked)\n\n    this.syncEnabled$ = this.store.select(fromAccountShareSelect.selectSyncEnabled)\n\n    this.alert$ = this.store.select(fromAccountShareSelect.selectAlert)\n\n    this.alert$.pipe(takeUntil(this.ngDestroyed$)).subscribe(this.showOrDismissAlert.bind(this))\n\n    this.store.dispatch(actions.viewInitialization())\n  }\n\n  public ngOnDestroy(): void {\n    this.ngDestroyed$.next()\n    this.ngDestroyed$.complete()\n  }\n\n  public toggleSecret(secret: MnemonicSecret): void {\n    this.store.dispatch(actions.secretToggled({ secretId: secret.id }))\n  }\n\n  public sync(): void {\n    this.store.dispatch(actions.syncButtonClicked())\n  }\n\n  private async showOrDismissAlert(alert: UIAction<Alert> | undefined): Promise<void> {\n    this.alertElement?.dismiss().catch(handleErrorLocal(ErrorCategory.IONIC_ALERT))\n    if (alert?.status === UIActionStatus.PENDING) {\n      this.alertElement = await this.uiEventService.getTranslatedAlert(this.getAlertData(alert.value))\n      this.alertElement.present().catch(handleErrorLocal(ErrorCategory.IONIC_ALERT))\n\n      return this.alertElement\n        .onWillDismiss()\n        .then(() => {\n          this.store.dispatch(actions.alertDismissed({ id: alert.id }))\n        })\n        .catch(handleErrorLocal(ErrorCategory.IONIC_ALERT))\n    } else {\n      this.alertElement = undefined\n    }\n  }\n\n  private getAlertData(alert: Alert): AlertOptions {\n    switch (alert.type) {\n      case 'walletsNotMigrated':\n        return this.walletsNotMigratedAlert()\n      case 'excludedLegacyAccounts':\n        return this.excludedLegacyAccountsAlert(alert.shareUrl)\n      case 'unknownError':\n        return this.unknownErrorAlert(alert.message)\n      default:\n        return {}\n    }\n  }\n\n  private walletsNotMigratedAlert(): AlertOptions {\n    return {\n      header: 'wallet-share-select.alert.wallets-not-migrated.header',\n      message: 'wallet-share-select.alert.wallets-not-migrated.message',\n      backdropDismiss: true,\n      buttons: [\n        {\n          text: 'wallet-share-select.alert.wallets-not-migrated.button_label'\n        }\n      ]\n    }\n  }\n\n  private excludedLegacyAccountsAlert(shareUrl: IACMessageDefinitionObjectV3[]): AlertOptions {\n    return {\n      header: 'wallet-share-select.alert.excluded-legacy-accounts.header',\n      message: 'wallet-share-select.alert.excluded-legacy-accounts.message',\n      backdropDismiss: true,\n      buttons: [\n        {\n          text: 'wallet-share-select.alert.excluded-legacy-accounts.button-reject_label'\n        },\n        {\n          text: 'wallet-share-select.alert.excluded-legacy-accounts.button-accept_label',\n          handler: () => {\n            this.store.dispatch(actions.migrationAlertAccepted({ shareUrl }))\n          }\n        }\n      ]\n    }\n  }\n\n  private unknownErrorAlert(message?: string): AlertOptions {\n    return {\n      header: 'wallet-share-select.alert.unknown-error.header',\n      message: message ?? 'wallet-share-select.alert.unknown-error.message',\n      backdropDismiss: true,\n      buttons: [\n        {\n          text: 'wallet-share-select.alert.unknown-error.button_label'\n        }\n      ]\n    }\n  }\n}\n","<ion-header class=\"ion-no-border\">\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"/tabs/tab-accounts\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>{{ 'wallet-share-select.title' | translate }}</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"ion-padding\">\n  <h3 class=\"ion-padding-bottom\" [innerHTML]=\"'wallet-share-select.heading' | translate\"></h3>\n\n  <ion-list lines=\"none\" *ngIf=\"(secrets$ | async).status === UIResourceStatus.SUCCESS\">\n    <ng-container *ngFor=\"let secret of (secrets$ | async).value\">\n      <ion-item detail=\"false\" class=\"ion-no-padding\">\n        <ion-label class=\"white\">{{ secret.label }}</ion-label>\n        <ion-checkbox\n          slot=\"end\"\n          color=\"primary\"\n          [checked]=\"(isChecked$ | async)[secret.id]\"\n          (ionChange)=\"toggleSecret(secret)\"\n        ></ion-checkbox>\n      </ion-item>\n      <ion-list lines=\"none\" *ngIf=\"(isChecked$ | async)[secret.id]\">\n        <airgap-account-item\n          *ngFor=\"let wallet of (secret.wallets | walletFilter: { status: AirGapWalletStatus.ACTIVE })\"\n          [wallet]=\"wallet\"\n        ></airgap-account-item>\n      </ion-list>\n    </ng-container>\n  </ion-list>\n\n  <ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n    <ion-button [disabled]=\"!(syncEnabled$ | async)\" color=\"primary\" shape=\"round\" (click)=\"sync()\">\n      {{ 'wallet-share-select.sync_label' | translate }}\n    </ion-button>\n  </ion-fab>\n</ion-content>\n"],"sourceRoot":"webpack:///"}