{"version":3,"sources":["./src/app/pages/migration/migration.actions.ts","./src/app/pages/migration/migration.page.ts","./src/app/pages/migration/migration.page.html","./src/app/pages/migration/migration.module.ts","./src/app/utils/retry.ts","./src/app/pages/migration/migration.effects.ts","./src/app/pages/migration/migration.reducers.ts","./src/app/pages/migration/migration-routing.module.ts","./src/app/pages/migration/migration.utils.ts"],"names":[],"mappings":"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","file":"pages-migration-migration-module.js","sourcesContent":["import { ProtocolSymbols } from '@airgap/coinlib-core'\nimport { createAction, props } from '@ngrx/store'\n\nimport { MnemonicSecret } from '../../models/secret'\n\nconst featureName = 'Migration'\n\n/**************** View Lifecycle ****************/\n\nexport const viewWillEnter = createAction(`[${featureName}] View Will Enter`)\nexport const viewLeft = createAction(`[${featureName}] View Left`)\n\n/**************** Navigation Data ****************/\n\nexport const navigationDataLoading = createAction(`[${featureName}] Navigation Data Loading`)\nexport const navigationDataLoaded = createAction(\n  `[${featureName}] Navigation Data Loaded`,\n  props<{ secrets: MnemonicSecret[]; targetWalletKeys: string[] }>()\n)\nexport const invalidData = createAction(`[${featureName}] Invalid Navigation Data`)\n\n/**************** User Interaction ****************/\n\nexport const migrationStarted = createAction(`[${featureName}] Migration Started`)\nexport const finished = createAction(`[${featureName}] Finished`)\n\nexport const paranoiaAccepted = createAction(`[${featureName}] Paranoia Accepted`)\nexport const paranoiaRejected = createAction(`[${featureName}] Paranoia Rejected`)\n\nexport const bip39PassphraseProvided = createAction(`[${featureName}] BIP-39 Passphrase Provided`, props<{ passphrase: string }>())\nexport const bip39PassphraseRejected = createAction(`[${featureName}] BIP-39 Passphrase rejected`)\n\nexport const alertDismissed = createAction(`[${featureName}] Alert Dismissed`, props<{ id: string }>())\n\n/**************** Internal ****************/\n\nexport const nextSecret = createAction(`[${featureName}] Next Secret`, props<{ id: string }>())\nexport const secretSkipped = createAction(`[${featureName}] Secret Skipped`, props<{ id: string }>())\nexport const allSecretsHandled = createAction(`[${featureName}] All Secrets Handled`)\n\nexport const nextWallet = createAction(`[${featureName}] Next Wallet`, props<{ publicKey: string }>())\nexport const walletSkipped = createAction(`[${featureName}] Wallet Skipped`, props<{ publicKey: string }>())\nexport const allWalletsHandled = createAction(`[${featureName}] All Wallets Handled`)\n\nexport const paranoiaDetected = createAction(`[${featureName}] Paranoia Detected`, props<{ secretId: string }>())\nexport const invalidBip39Passphrase = createAction(\n  `[${featureName}] Invalid BIP-39 Passphrase`,\n  props<{ protocolIdentifier: ProtocolSymbols; publicKey: string }>()\n)\n\nexport const unknownError = createAction(`[${featureName}] Unknown Error`, props<{ message?: string }>())\n","import { UIAction, UIActionStatus, UiEventService, UIResource, UIResourceStatus } from '@airgap/angular-core'\nimport { Component, OnDestroy } from '@angular/core'\nimport { AlertOptions } from '@ionic/core'\nimport { Store } from '@ngrx/store'\nimport { TranslateService } from '@ngx-translate/core'\nimport { Observable, Subject } from 'rxjs'\nimport { takeUntil } from 'rxjs/operators'\n\nimport { ErrorCategory, handleErrorLocal } from '../../services/error-handler/error-handler.service'\n\nimport * as actions from './migration.actions'\nimport * as fromMigration from './migration.reducers'\nimport { Alert, MigrationWalletGroup } from './migration.types'\nimport { shortenAddress } from './migration.utils'\n\n@Component({\n  selector: 'airgap-migration',\n  templateUrl: './migration.page.html',\n  styleUrls: ['./migration.page.scss']\n})\nexport class MigrationPage implements OnDestroy {\n  public readonly walletGroups$: Observable<UIResource<MigrationWalletGroup[]>>\n\n  public readonly isRunning$: Observable<boolean>\n  public readonly isDone$: Observable<boolean>\n\n  public readonly alert$: Observable<UIAction<Alert> | undefined>\n\n  public readonly UIResourceStatus: typeof UIResourceStatus = UIResourceStatus\n\n  private alertElement: HTMLIonAlertElement\n\n  private readonly ngDestroyed$: Subject<void> = new Subject()\n\n  constructor(\n    private readonly store: Store<fromMigration.State>,\n    private readonly uiEventService: UiEventService,\n    private readonly translateService: TranslateService\n  ) {\n    this.walletGroups$ = this.store.select(fromMigration.selectMigrationWalletGroups)\n\n    this.isRunning$ = this.store.select(fromMigration.selectIsRunning)\n    this.isDone$ = this.store.select(fromMigration.selectIsDone)\n\n    this.alert$ = this.store.select(fromMigration.selectAlert)\n\n    this.alert$.pipe(takeUntil(this.ngDestroyed$)).subscribe(this.showOrDismissAlert.bind(this))\n  }\n\n  public ionViewWillEnter(): void {\n    this.store.dispatch(actions.viewWillEnter())\n  }\n\n  public ionViewDidLeave(): void {\n    this.store.dispatch(actions.viewLeft())\n  }\n\n  public ngOnDestroy(): void {\n    this.ngDestroyed$.next()\n    this.ngDestroyed$.complete()\n  }\n\n  public run(): void {\n    this.store.dispatch(actions.migrationStarted())\n  }\n\n  public finish(): void {\n    this.store.dispatch(actions.finished())\n  }\n\n  private async showOrDismissAlert(alert: UIAction<Alert> | undefined): Promise<void> {\n    this.alertElement?.dismiss().catch(handleErrorLocal(ErrorCategory.IONIC_ALERT))\n    if (alert?.status === UIActionStatus.PENDING) {\n      this.alertElement = await this.uiEventService.getTranslatedAlert(this.getAlertData(alert.value))\n      this.alertElement.present().catch(handleErrorLocal(ErrorCategory.IONIC_ALERT))\n\n      return this.alertElement\n        .onWillDismiss()\n        .then(() => {\n          this.store.dispatch(actions.alertDismissed({ id: alert.id }))\n        })\n        .catch(handleErrorLocal(ErrorCategory.IONIC_ALERT))\n    } else {\n      this.alertElement = undefined\n    }\n  }\n\n  private getAlertData(alert: Alert): AlertOptions {\n    switch (alert.type) {\n      case 'paranoiaInfo':\n        return this.paranoiaInfoAlert(alert.label)\n      case 'bip39Passphrase':\n        return this.bip39PassphraseAlert(alert.address, alert.protocolName)\n      case 'unknownError':\n        return this.unknownErrorAlert(alert.message)\n      default:\n        return {}\n    }\n  }\n\n  private paranoiaInfoAlert(label: string): AlertOptions {\n    return {\n      header: 'migration.alert.paranoia-info.header',\n      message: this.translateService.instant('migration.alert.paranoia-info.message', {\n        label\n      }),\n      backdropDismiss: false,\n      buttons: [\n        {\n          text: 'migration.alert.paranoia-info.button-skip_label',\n          handler: (): void => {\n            this.store.dispatch(actions.paranoiaRejected())\n          }\n        },\n        {\n          text: 'migration.alert.paranoia-info.button-ok_label',\n          handler: (): void => {\n            this.store.dispatch(actions.paranoiaAccepted())\n          }\n        }\n      ]\n    }\n  }\n\n  private bip39PassphraseAlert(address: string, protocol: string): AlertOptions {\n    return {\n      header: 'migration.alert.bip39-passphrase.header',\n      message: this.translateService.instant('migration.alert.bip39-passphrase.message', {\n        address: shortenAddress(address),\n        protocol\n      }),\n      backdropDismiss: false,\n      inputs: [\n        {\n          name: 'bip39Passphrase',\n          type: 'password',\n          placeholder: 'migration.alert.bip39-passphrase.input-placeholder_label'\n        }\n      ],\n      buttons: [\n        {\n          text: 'migration.alert.bip39-passphrase.button-skip_label',\n          handler: (): void => {\n            this.store.dispatch(actions.bip39PassphraseRejected())\n          }\n        },\n        {\n          text: 'migration.alert.bip39-passphrase.button-ok_label',\n          handler: (result: { bip39Passphrase: string }): void => {\n            const passphrase: string = result.bip39Passphrase ?? ''\n            this.store.dispatch(actions.bip39PassphraseProvided({ passphrase }))\n          }\n        }\n      ]\n    }\n  }\n\n  private unknownErrorAlert(message?: string): AlertOptions {\n    return {\n      header: 'migration.alert.unknown-error.header',\n      message: message ?? 'migration.alert.unknown-error.message',\n      backdropDismiss: true,\n      buttons: [\n        {\n          text: 'migration.alert.unknown-error.button_label'\n        }\n      ]\n    }\n  }\n}\n","<ion-header class=\"ion-no-border\">\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"/tabs/tab-accounts\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>{{ 'migration.title' | translate }}</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"ion-padding\">\n  <h3 class=\"ion-padding-bottom\">{{ 'migration.heading' | translate }}</h3>\n\n  <ion-list lines=\"none\" *ngIf=\"(walletGroups$ | async).status === UIResourceStatus.SUCCESS\">\n    <ion-list-header class=\"ion-no-padding\">\n      <ion-label color=\"light\" [innerHtml]=\"'migration.list.header' | translate\"></ion-label>\n    </ion-list-header>\n    <ng-container *ngFor=\"let group of (walletGroups$ | async).value\">\n      <ion-item detail=\"false\" class=\"ion-no-padding\">\n        <ion-label color=\"light\">{{ group.label }}</ion-label>\n        <ng-container *ngIf=\"(isRunning$ | async) || (isDone$ | async)\">\n          <ion-spinner *ngIf=\"group.status === 'migrating'\" name=\"lines\" slot=\"end\"></ion-spinner>\n          <ion-icon name=\"checkmark-done-outline\" *ngIf=\"group.status === 'migrated'\" slot=\"end\"></ion-icon>\n          <ion-icon name=\"close-outline\" *ngIf=\"group.status === 'skipped'\" slot=\"end\"></ion-icon>\n          <ion-icon name=\"alert-outline\" *ngIf=\"group.status === 'partiallyMigrated'\" slot=\"end\"></ion-icon>\n          <ion-icon name=\"time-outline\" *ngIf=\"group.status === 'waiting'\" slot=\"end\"></ion-icon>\n        </ng-container>\n      </ion-item>\n      <ion-list lines=\"none\">\n        <ion-item *ngFor=\"let wallet of group.wallets\">\n          <span class=\"airgap-account-item-migration\">\n            <airgap-account-item [wallet]=\"wallet.data\"></airgap-account-item>\n          </span>\n          <ng-container *ngIf=\"(isRunning$ | async) || (isDone$ | async)\">\n            <ion-spinner *ngIf=\"wallet.status === 'migrating'\" name=\"lines-small\" slot=\"end\"></ion-spinner>\n            <ion-icon name=\"checkmark-outline\" size=\"small\" *ngIf=\"wallet.status === 'migrated'\" slot=\"end\"></ion-icon>\n            <ion-icon name=\"close-outline\" size=\"small\" *ngIf=\"wallet.status === 'skipped'\" slot=\"end\"></ion-icon>\n            <ion-icon name=\"time-outline\" size=\"small\" *ngIf=\"wallet.status === 'waiting'\" slot=\"end\"></ion-icon>\n          </ng-container>\n        </ion-item>\n      </ion-list>\n    </ng-container>\n  </ion-list>\n\n  <ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n    <ion-button\n      *ngIf=\"(walletGroups$ | async).status === UIResourceStatus.SUCCESS && !(isDone$ | async)\"\n      [disabled]=\"isRunning$ | async\"\n      color=\"primary\"\n      shape=\"round\"\n      (click)=\"run()\"\n    >\n      {{ 'migration.button-run_label' | translate }}\n    </ion-button>\n    <ion-button\n      *ngIf=\"(walletGroups$ | async).status !== UIResourceStatus.IDLE && (isDone$ | async)\"\n      color=\"primary\"\n      shape=\"round\"\n      (click)=\"finish()\"\n    >\n      {{ 'migration.button-done_label' | translate }}\n    </ion-button>\n  </ion-fab>\n</ion-content>\n","import { AirGapAngularCoreModule } from '@airgap/angular-core'\nimport { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { IonicModule } from '@ionic/angular'\nimport { EffectsModule } from '@ngrx/effects'\nimport { StoreModule } from '@ngrx/store'\nimport { TranslateModule } from '@ngx-translate/core'\n\nimport { ComponentsModule } from '../../components/components.module'\n\nimport { MigrationPageRoutingModule } from './migration-routing.module'\nimport { MigrationEffects } from './migration.effects'\nimport { MigrationPage } from './migration.page'\nimport * as fromMigration from './migration.reducers'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ComponentsModule,\n    FormsModule,\n    IonicModule,\n    TranslateModule,\n    MigrationPageRoutingModule,\n    StoreModule.forFeature('migration', fromMigration.reducer),\n    EffectsModule.forFeature([MigrationEffects]),\n    AirGapAngularCoreModule\n  ],\n  declarations: [MigrationPage]\n})\nexport class MigrationPageModule {}\n","type RetryActionType = 'abort' | 'retry'\ninterface RetryAction<Type extends RetryActionType, Args> {\n  type: Type\n  nextArgs?: Args\n}\n\ntype NextAction<S> = RetryAction<'abort', undefined> | (S extends undefined ? RetryAction<'retry', S> : Required<RetryAction<'retry', S>>)\n\nexport async function retry<T, S = undefined, E = unknown>(setup: {\n  action: (args: S) => Promise<T>\n  onFailure: (error: E) => Promise<NextAction<S>>\n  initArgs?: S\n}): Promise<T> {\n  let result: T\n  let currentAction: RetryActionType\n  let args: S | undefined = setup.initArgs\n  do {\n    try {\n      currentAction = 'abort'\n      result = await setup.action(args)\n    } catch (error) {\n      const nextAction: NextAction<S> = await setup.onFailure(error)\n      currentAction = nextAction.type\n      args = nextAction.nextArgs\n    }\n  } while (currentAction === 'retry')\n\n  return result\n}\n","import { ExposedPromiseRegistry, flattened } from '@airgap/angular-core'\nimport { AirGapWallet, AirGapWalletStatus } from '@airgap/coinlib-core'\nimport { Injectable } from '@angular/core'\nimport { Actions, createEffect, ofType } from '@ngrx/effects'\nimport { Action, Store } from '@ngrx/store'\nimport { entropyToMnemonic } from 'bip39'\nimport { concat, from, Observable, of, Subscriber } from 'rxjs'\nimport { first, switchMap, tap, withLatestFrom } from 'rxjs/operators'\n\nimport { MnemonicSecret } from '../../models/secret'\nimport { MigrationService } from '../../services/migration/migration.service'\nimport { NavigationService } from '../../services/navigation/navigation.service'\nimport { SecretsService } from '../../services/secrets/secrets.service'\nimport { isSecretMigrated, isWalletMigrated } from '../../utils/migration'\nimport { retry } from '../../utils/retry'\n\nimport * as actions from './migration.actions'\nimport * as fromMigration from './migration.reducers'\n\nenum PromiseKey {\n  PARANOIA_ACCEPTED = 'paranoiaAccepted',\n  BIP39_PASSPHRASE = 'bip39Passphrase'\n}\n\ninterface PromiseResolveType {\n  [PromiseKey.PARANOIA_ACCEPTED]: boolean\n  [PromiseKey.BIP39_PASSPHRASE]: string | undefined\n}\n\n@Injectable()\nexport class MigrationEffects {\n  public onSuccess: (() => void) | undefined\n  public onError: (() => void) | undefined\n\n  public readonly exposedPromises: ExposedPromiseRegistry<PromiseKey, PromiseResolveType> = new ExposedPromiseRegistry()\n\n  public navigationData$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(actions.viewWillEnter),\n      withLatestFrom(this.secretsService.getSecretsObservable()),\n      switchMap(([_, secrets]) => concat(of(actions.navigationDataLoading()), from(this.loadNavigationData(secrets)).pipe(first())))\n    )\n  )\n\n  public migrationProgress$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(actions.migrationStarted),\n      withLatestFrom(this.store.select(fromMigration.selectTargetSecrets)),\n      withLatestFrom(this.store.select(fromMigration.selectTargetWalletKeys)),\n      switchMap(([[_, secrets], targetWalletKeys]) => this.migrate(secrets.value ?? [], targetWalletKeys))\n    )\n  )\n\n  public paranoiaAccepted$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(actions.paranoiaAccepted),\n        tap(() => {\n          this.exposedPromises.resolve(PromiseKey.PARANOIA_ACCEPTED, true)\n        })\n      ),\n    { dispatch: false }\n  )\n\n  public paranoiaRejected$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(actions.paranoiaRejected),\n        tap(() => {\n          this.exposedPromises.resolve(PromiseKey.PARANOIA_ACCEPTED, false)\n        })\n      ),\n    { dispatch: false }\n  )\n\n  public bip39Passphrase$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(actions.bip39PassphraseProvided),\n        tap((action) => {\n          this.exposedPromises.resolve(PromiseKey.BIP39_PASSPHRASE, action.passphrase)\n        })\n      ),\n    { dispatch: false }\n  )\n\n  public bip39PassphraseRejected$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(actions.bip39PassphraseRejected),\n        tap(() => {\n          this.exposedPromises.resolve(PromiseKey.BIP39_PASSPHRASE, undefined)\n        })\n      ),\n    { dispatch: false }\n  )\n\n  public finished$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(actions.finished),\n        tap(() => {\n          this.finish()\n        })\n      ),\n    { dispatch: false }\n  )\n\n  public onLeft$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(actions.viewLeft),\n        tap(() => {\n          this.callCallbacks()\n        })\n      ),\n    { dispatch: false }\n  )\n\n  constructor(\n    private readonly actions$: Actions,\n    private readonly store: Store<fromMigration.State>,\n    private readonly navigationService: NavigationService,\n    private readonly secretsService: SecretsService,\n    private readonly migrationService: MigrationService\n  ) {}\n\n  private async loadNavigationData(allSecrets: MnemonicSecret[]): Promise<Action> {\n    const state = this.navigationService.getState()\n\n    this.onSuccess = state.onSuccess\n    this.onError = state.onError\n\n    const [secrets, targetWalletKeys]: [MnemonicSecret[] | undefined, string[] | undefined] = this.getSecretsAndTargetWalletKeys(\n      state,\n      allSecrets\n    )\n\n    return secrets !== undefined && targetWalletKeys !== undefined\n      ? actions.navigationDataLoaded({ secrets, targetWalletKeys })\n      : actions.invalidData()\n  }\n\n  private getSecretsAndTargetWalletKeys(state: any, allSecrets: MnemonicSecret[]): [MnemonicSecret[] | undefined, string[] | undefined] {\n    if (state.secrets !== undefined) {\n      const secrets: MnemonicSecret[] = state.secrets.filter((secret: MnemonicSecret) => !isSecretMigrated(secret))\n      const walletKeys: string[] = flattened(\n        secrets.map((secret: MnemonicSecret) =>\n          secret.wallets\n            .filter((wallet: AirGapWallet) => wallet.status === AirGapWalletStatus.ACTIVE && !isWalletMigrated(wallet))\n            .map((wallet: AirGapWallet) => wallet.publicKey)\n        )\n      )\n\n      return [secrets, walletKeys]\n    }\n\n    if (state.wallets !== undefined) {\n      const wallets: AirGapWallet[] = state.wallets\n\n      const walletKeys: string[] = wallets\n        .filter((wallet: AirGapWallet) => !isWalletMigrated(wallet))\n        .map((wallet: AirGapWallet) => wallet.publicKey)\n\n      const walletKeysSet: Set<string> = new Set(walletKeys)\n\n      const secrets: MnemonicSecret[] = allSecrets.filter((secret: MnemonicSecret) =>\n        secret.wallets.some((wallet: AirGapWallet) => walletKeysSet.has(wallet.publicKey))\n      )\n\n      return [secrets, walletKeys]\n    }\n\n    return [undefined, undefined]\n  }\n\n  private migrate(secrets: MnemonicSecret[], targetWalletKeys: string[]): Observable<Action> {\n    return new Observable((subscriber: Subscriber<Action>) => {\n      // tslint:disable-next-line: no-floating-promises\n      new Promise<void>(async (resolve) => {\n        const targetWalletKeysSet: Set<string> = new Set(targetWalletKeys)\n        for (const secret of secrets) {\n          await this.migrateSecret(subscriber, secret, targetWalletKeysSet)\n        }\n        subscriber.next(actions.allSecretsHandled())\n        resolve()\n      })\n        .catch((error) => {\n          subscriber.next(actions.unknownError({ message: typeof error === 'string' ? error : error.message }))\n        })\n        .finally(() => {\n          subscriber.complete()\n        })\n    })\n  }\n\n  private async migrateSecret(subscriber: Subscriber<Action>, secret: MnemonicSecret, targetWalletKeys: Set<string>): Promise<void> {\n    subscriber.next(actions.nextSecret({ id: secret.id }))\n\n    if (secret.isParanoia) {\n      const paranoiaAccepted: boolean = await this.waitForParanoiaAccepted(subscriber, secret)\n      if (!paranoiaAccepted) {\n        subscriber.next(actions.secretSkipped({ id: secret.id }))\n        return\n      }\n    }\n\n    const entropy: string = await this.secretsService.retrieveEntropyForSecret(secret)\n    const mnemonic: string = entropyToMnemonic(entropy)\n\n    await this.migrationService.migrateSecret(secret, { mnemonic, persist: false })\n\n    for (const wallet of secret.wallets.filter((wallet: AirGapWallet) => targetWalletKeys.has(wallet.publicKey))) {\n      await this.migrateWallet(subscriber, wallet, mnemonic)\n    }\n\n    subscriber.next(actions.allWalletsHandled())\n    await this.secretsService.addOrUpdateSecret(secret, { setActive: false })\n  }\n\n  private async waitForParanoiaAccepted(subscriber: Subscriber<Action>, secret: MnemonicSecret): Promise<boolean> {\n    subscriber.next(actions.paranoiaDetected({ secretId: secret.id }))\n\n    return this.exposedPromises.yield(PromiseKey.PARANOIA_ACCEPTED)\n  }\n\n  private async migrateWallet(subscriber: Subscriber<Action>, wallet: AirGapWallet, mnemonic: string): Promise<void> {\n    subscriber.next(actions.nextWallet({ publicKey: wallet.publicKey }))\n\n    await retry({\n      initArgs: '',\n      action: (bip39Passphrase: string) => this.migrationService.migrateWallet(wallet, { mnemonic, bip39Passphrase, persist: false }),\n      onFailure: async (error: any) => {\n        if (this.isInvalidBip39PassphraseError(error)) {\n          const bip39Passphrase: string | undefined = await this.askForBip39Passphrase(subscriber, wallet)\n          if (bip39Passphrase === undefined) {\n            subscriber.next(actions.walletSkipped({ publicKey: wallet.publicKey }))\n            return { type: 'abort' }\n          }\n\n          return {\n            type: 'retry',\n            nextArgs: bip39Passphrase\n          }\n        } else {\n          subscriber.next(actions.unknownError({ message: typeof error === 'string' ? error : error.message }))\n          return { type: 'abort' }\n        }\n      }\n    })\n  }\n\n  private async askForBip39Passphrase(subscriber: Subscriber<Action>, wallet: AirGapWallet): Promise<string | undefined> {\n    subscriber.next(actions.invalidBip39Passphrase({ protocolIdentifier: wallet.protocol.identifier, publicKey: wallet.publicKey }))\n\n    return this.exposedPromises.yield(PromiseKey.BIP39_PASSPHRASE)\n  }\n\n  private finish(): void {\n    this.navigationService.back()\n  }\n\n  private callCallbacks(): void {\n    if (this.onSuccess !== undefined) {\n      this.onSuccess()\n    }\n  }\n\n  private isInvalidBip39PassphraseError(error: any): boolean {\n    return error.message?.toLowerCase().startsWith('invalid bip-39 passphrase')\n  }\n}\n","/**************** STATE ****************/\n\nimport { generateGUID, UIAction, UIActionStatus, UIResource, UIResourceStatus } from '@airgap/angular-core'\nimport { AirGapWallet } from '@airgap/coinlib-core'\nimport { createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store'\n\nimport * as fromRoot from '../../app.reducers'\nimport { MnemonicSecret } from '../../models/secret'\n\nimport * as actions from './migration.actions'\nimport { Alert, Bip39PassphraseAlert, MigrationWallet, MigrationWalletGroup, ParanoiaInfoAlert, UnknownErrorAlert } from './migration.types'\nimport { getWalletGroupMigrationStatus, getWalletMigrationStatus } from './migration.utils'\n\nexport interface FeatureState {\n  // TODO: move secrets to a global state\n  targetSecrets: UIResource<MnemonicSecret[]>\n  targetWalletKeys: string[]\n\n  handledSecretIds: string[]\n  handledWalletKeys: string[]\n\n  currentlyHandledSecretId: string | undefined\n  currentlyHandledWalletKey: string | undefined\n\n  alert: UIAction<Alert> | undefined\n}\n\nexport interface State extends fromRoot.State {\n  migration: FeatureState\n}\n\n/**************** Reducers ****************/\n\nexport const initialState: FeatureState = {\n  targetSecrets: {\n    status: UIResourceStatus.IDLE,\n    value: []\n  },\n  targetWalletKeys: [],\n\n  handledSecretIds: [],\n  handledWalletKeys: [],\n\n  currentlyHandledSecretId: undefined,\n  currentlyHandledWalletKey: undefined,\n\n  alert: undefined\n}\n\nexport const reducer = createReducer(\n  initialState,\n  on(actions.navigationDataLoading, (state) => ({\n    ...state,\n    targetSecrets: {\n      status: UIResourceStatus.LOADING,\n      value: state.targetSecrets.value\n    }\n  })),\n  on(actions.navigationDataLoaded, (state, { secrets, targetWalletKeys }) => ({\n    ...state,\n    targetSecrets: {\n      status: UIResourceStatus.SUCCESS,\n      value: secrets\n    },\n    targetWalletKeys,\n\n    handledSecretIds: [],\n    handledWalletKeys: [],\n\n    currentlyHandledSecretId: undefined,\n    currentlyHandledWalletKey: undefined,\n\n    alert: undefined\n  })),\n  on(actions.invalidData, (state) => ({\n    ...state,\n    targetSecrets: {\n      status: UIResourceStatus.ERROR,\n      value: state.targetSecrets.value\n    }\n  })),\n  on(actions.nextSecret, (state, { id }) => ({\n    ...state,\n    handledSecretIds:\n      state.currentlyHandledSecretId !== undefined ? [...state.handledSecretIds, state.currentlyHandledSecretId] : state.handledSecretIds,\n    currentlyHandledSecretId: id\n  })),\n  on(actions.secretSkipped, (state, { id }) => {\n    const secret: MnemonicSecret | undefined = state.targetSecrets.value?.find((secret: MnemonicSecret) => secret.id === id)\n\n    return {\n      ...state,\n      handledWalletKeys: state.handledWalletKeys.concat(secret?.wallets.map((wallet: AirGapWallet) => wallet.publicKey) ?? [])\n    }\n  }),\n  on(actions.allSecretsHandled, (state) => ({\n    ...state,\n    handledSecretIds:\n      state.currentlyHandledSecretId !== undefined ? [...state.handledSecretIds, state.currentlyHandledSecretId] : state.handledSecretIds,\n    currentlyHandledSecretId: undefined\n  })),\n  on(actions.nextWallet, (state, { publicKey }) => ({\n    ...state,\n    handledWalletKeys:\n      state.currentlyHandledWalletKey !== undefined\n        ? [...state.handledWalletKeys, state.currentlyHandledWalletKey]\n        : state.handledWalletKeys,\n    currentlyHandledWalletKey: publicKey\n  })),\n  on(actions.allWalletsHandled, (state) => ({\n    ...state,\n    handledWalletKeys:\n      state.currentlyHandledWalletKey !== undefined\n        ? [...state.handledWalletKeys, state.currentlyHandledWalletKey]\n        : state.handledWalletKeys,\n    currentlyHandledWalletKey: undefined\n  })),\n  on(actions.paranoiaDetected, (state, { secretId }) => {\n    const secret: MnemonicSecret | undefined = state.targetSecrets.value?.find((secret: MnemonicSecret) => secret.id === secretId)\n\n    return {\n      ...state,\n      alert:\n        secret !== undefined\n          ? {\n              id: generateGUID(),\n              value: {\n                type: 'paranoiaInfo' as ParanoiaInfoAlert['type'],\n                label: secret.label\n              },\n              status: UIActionStatus.PENDING\n            }\n          : state.alert\n    }\n  }),\n  on(actions.invalidBip39Passphrase, (state, { protocolIdentifier, publicKey }) => {\n    let wallet: AirGapWallet | undefined\n    for (const secret of state.targetSecrets.value ?? []) {\n      for (const _wallet of secret.wallets) {\n        if (_wallet.protocol.identifier === protocolIdentifier && _wallet.publicKey === publicKey) {\n          wallet = _wallet\n          break\n        }\n      }\n    }\n\n    return {\n      ...state,\n      alert:\n        wallet !== undefined\n          ? {\n              id: generateGUID(),\n              value: {\n                type: 'bip39Passphrase' as Bip39PassphraseAlert['type'],\n                protocolName: wallet.protocol.name,\n                address: wallet.receivingPublicAddress\n              },\n              status: UIActionStatus.PENDING\n            }\n          : state.alert\n    }\n  }),\n  on(actions.unknownError, (state, { message }) => ({\n    ...state,\n    alert: {\n      id: generateGUID(),\n      value: {\n        type: 'unknownError' as UnknownErrorAlert['type'],\n        message: message?.length > 0 ? message : undefined\n      },\n      status: UIActionStatus.PENDING\n    }\n  })),\n  on(actions.alertDismissed, (state, { id }) => ({\n    ...state,\n    alert:\n      state.alert !== undefined\n        ? {\n            id: state.alert.id,\n            value: state.alert.value,\n            status: id === state.alert.id ? UIActionStatus.HANDLED : state.alert.status\n          }\n        : undefined\n  }))\n)\n\n/**************** Selectors ****************/\n\nexport const selectFeatureState = createFeatureSelector<State, FeatureState>('migration')\n\nexport const selectTargetSecrets = createSelector(\n  selectFeatureState,\n  (state: FeatureState): UIResource<MnemonicSecret[]> => state.targetSecrets\n)\nexport const selectTargetWalletKeys = createSelector(selectFeatureState, (state: FeatureState): string[] => state.targetWalletKeys)\nexport const selectHandledSecretIds = createSelector(selectFeatureState, (state: FeatureState): string[] => state.handledSecretIds)\nexport const selectHandledWalletKeys = createSelector(selectFeatureState, (state: FeatureState): string[] => state.handledWalletKeys)\nexport const selectCurrentlyHandledSecretId = createSelector(\n  selectFeatureState,\n  (state: FeatureState): string | undefined => state.currentlyHandledSecretId\n)\nexport const selectCurrentlyHandledWalletKey = createSelector(\n  selectFeatureState,\n  (state: FeatureState): string | undefined => state.currentlyHandledWalletKey\n)\nexport const selectAlert = createSelector(selectFeatureState, (state: FeatureState): UIAction<Alert> | undefined => state.alert)\n\nexport const selectMigrationWalletGroups = createSelector(\n  selectTargetSecrets,\n  selectTargetWalletKeys,\n  selectHandledWalletKeys,\n  selectCurrentlyHandledSecretId,\n  selectCurrentlyHandledWalletKey,\n  (\n    targetSecrets: UIResource<MnemonicSecret[]>,\n    targetWalletKeys: string[],\n    handledWalletKeys: string[],\n    currentlyHandledSecretId: string | undefined,\n    currentlyHandledWalletKey: string | undefined\n  ): UIResource<MigrationWalletGroup[]> => {\n    const groups: MigrationWalletGroup[] = []\n\n    if (targetSecrets.value !== undefined && targetSecrets.value.length > 0) {\n      const targetWalletKeysSet: Set<string> = new Set(targetWalletKeys)\n      const handledWalletKeysSet: Set<string> = new Set(handledWalletKeys)\n\n      for (const secret of targetSecrets.value) {\n        const wallets: MigrationWallet[] = secret.wallets\n          .filter((wallet: AirGapWallet) => targetWalletKeysSet.has(wallet.publicKey))\n          .map((wallet: AirGapWallet) => ({\n            status: getWalletMigrationStatus(wallet, { currentlyHandled: currentlyHandledWalletKey, alreadyHandled: handledWalletKeysSet }),\n            data: wallet\n          }))\n\n        groups.push({\n          id: secret.id,\n          label: secret.label,\n          status: getWalletGroupMigrationStatus(secret, wallets, { currentlyHandled: currentlyHandledSecretId }),\n          wallets\n        })\n      }\n    }\n\n    return {\n      status: targetSecrets.status,\n      value: groups\n    }\n  }\n)\n\nexport const selectIsRunning = createSelector(\n  selectCurrentlyHandledSecretId,\n  selectCurrentlyHandledWalletKey,\n  (currentlyHandledSecretId: string | undefined, currentlyHandledWalletKey: string | undefined): boolean =>\n    currentlyHandledSecretId !== undefined || currentlyHandledWalletKey !== undefined\n)\n\nexport const selectIsDone = createSelector(\n  selectTargetSecrets,\n  selectTargetWalletKeys,\n  selectHandledSecretIds,\n  selectHandledWalletKeys,\n  selectCurrentlyHandledSecretId,\n  selectCurrentlyHandledWalletKey,\n  (\n    targetSecrets: UIResource<MnemonicSecret[]>,\n    targetWalletKeys: string[],\n    handledSecretIds: string[],\n    handledWalletKeys: string[],\n    currentlyHandledSecretId: string | undefined,\n    currentlyHandledWalletKey: string | undefined\n  ): boolean =>\n    handledSecretIds.length >= (targetSecrets.value?.length ?? 0) &&\n    handledWalletKeys.length >= targetWalletKeys.length &&\n    currentlyHandledSecretId === undefined &&\n    currentlyHandledWalletKey === undefined\n)\n","import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nimport { MigrationPage } from './migration.page'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MigrationPage\n  }\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MigrationPageRoutingModule {}\n","import { AirGapWallet } from '@airgap/coinlib-core'\n\nimport { MnemonicSecret } from '../../models/secret'\nimport { isWalletMigrated } from '../../utils/migration'\n\nimport { GroupMigrationStatus, MigrationStatus, MigrationWallet } from './migration.types'\n\nexport function getWalletMigrationStatus(\n  wallet: AirGapWallet,\n  options: { currentlyHandled: string | undefined; alreadyHandled: Set<string> }\n): MigrationStatus {\n  if (wallet.publicKey === options.currentlyHandled) {\n    return 'migrating'\n  }\n\n  if (options.alreadyHandled.has(wallet.publicKey)) {\n    return isWalletMigrated(wallet) ? 'migrated' : 'skipped'\n  }\n\n  return 'waiting'\n}\n\nexport function getWalletGroupMigrationStatus(\n  secret: MnemonicSecret,\n  wallets: MigrationWallet[],\n  options: { currentlyHandled: string | undefined }\n): GroupMigrationStatus {\n  const statusCounter: Record<MigrationStatus, number> = {\n    waiting: 0,\n    migrating: 0,\n    migrated: 0,\n    skipped: 0\n  }\n\n  wallets.forEach((wallet: MigrationWallet) => {\n    statusCounter[wallet.status]++\n  })\n\n  if (secret.id === options.currentlyHandled) {\n    return 'migrating'\n  } else if (statusCounter.migrated === wallets.length) {\n    return 'migrated'\n  } else if (statusCounter.skipped === wallets.length) {\n    return 'skipped'\n  } else if (statusCounter.waiting === wallets.length) {\n    return 'waiting'\n  } else if (statusCounter.migrating > 0) {\n    return 'migrating'\n  } else if (statusCounter.migrated + statusCounter.skipped === wallets.length) {\n    return 'partiallyMigrated'\n  } else {\n    return 'waiting'\n  }\n}\n\nexport function shortenAddress(address: string): string {\n  return address.length > 12 ? `${address.slice(0, 5)}...${address.slice(-5)}` : address\n}\n"],"sourceRoot":"webpack:///"}