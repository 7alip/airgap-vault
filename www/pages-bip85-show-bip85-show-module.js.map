{"version":3,"sources":["./src/app/models/BIP85Child.ts","./src/app/pages/bip85-show/bip85-show-routing.module.ts","./src/app/pages/bip85-show/bip85-show.page.ts","./src/app/pages/bip85-show/bip85-show.page.html","./src/app/pages/bip85-show/bip85-show.module.ts","./src/app/models/BIP85.ts"],"names":[],"mappings":"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","file":"pages-bip85-show-bip85-show-module.js","sourcesContent":["import { encode } from 'wif'\nimport { fromPrivateKey } from 'bip32'\nimport { entropyToMnemonic } from 'bip39'\nimport { BIP85_APPLICATIONS } from './BIP85'\n\nexport class BIP85Child {\n  constructor(private readonly entropy: string, private readonly type: BIP85_APPLICATIONS) {}\n\n  toEntropy(): string {\n    if (this.type === BIP85_APPLICATIONS.XPRV) {\n      return this.entropy.slice(64, 128)\n    } else {\n      return this.entropy\n    }\n  }\n\n  toMnemonic(): string {\n    if (this.type !== BIP85_APPLICATIONS.BIP39) {\n      throw new Error('BIP85Child type is not BIP39')\n    }\n\n    return entropyToMnemonic(this.entropy)\n  }\n\n  toWIF(): string {\n    if (this.type !== BIP85_APPLICATIONS.WIF) {\n      throw new Error('BIP85Child type is not WIF')\n    }\n\n    const buf = Buffer.from(this.entropy, 'hex')\n\n    return encode(128, buf, true)\n  }\n\n  toXPRV(): string {\n    if (this.type !== BIP85_APPLICATIONS.XPRV) {\n      throw new Error('BIP85Child type is not XPRV')\n    }\n\n    const chainCode = Buffer.from(this.entropy.slice(0, 64), 'hex')\n    const privateKey = Buffer.from(this.entropy.slice(64, 128), 'hex')\n\n    return fromPrivateKey(privateKey, chainCode).toBase58()\n  }\n}\n","import { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\n\nimport { Bip85ShowPage } from './bip85-show.page'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Bip85ShowPage\n  }\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class Bip85ShowPageRoutingModule {}\n","import { Component } from '@angular/core'\nimport { BIPSigner } from 'src/app/models/BIP39Signer'\nimport { BIP85 } from 'src/app/models/BIP85'\nimport { MnemonicSecret } from 'src/app/models/secret'\nimport { DeviceService } from 'src/app/services/device/device.service'\nimport { ErrorCategory, handleErrorLocal } from 'src/app/services/error-handler/error-handler.service'\nimport { NavigationService } from 'src/app/services/navigation/navigation.service'\nimport { SecureStorage, SecureStorageService } from 'src/app/services/secure-storage/secure-storage.service'\n\n@Component({\n  selector: 'airgap-bip85-show',\n  templateUrl: './bip85-show.page.html',\n  styleUrls: ['./bip85-show.page.scss']\n})\nexport class Bip85ShowPage {\n  private secret: MnemonicSecret\n  public mnemonicLength: 12 | 18 | 24\n  public index: number\n\n  public childMnemonic: string | undefined\n\n  public bip39Passphrase: string = ''\n\n  constructor(\n    private readonly deviceService: DeviceService,\n    private readonly navigationService: NavigationService,\n    private readonly secureStorageService: SecureStorageService\n  ) {\n    if (this.navigationService.getState()) {\n      this.secret = this.navigationService.getState().secret\n      this.mnemonicLength = this.navigationService.getState().mnemonicLength\n      this.index = this.navigationService.getState().index\n      this.bip39Passphrase = this.navigationService.getState().bip39Passphrase\n\n      this.generateChildMnemonic(this.secret, this.mnemonicLength, this.index)\n    }\n  }\n\n  public ionViewDidEnter(): void {\n    this.deviceService.enableScreenshotProtection({ routeBack: 'tab-settings' })\n  }\n\n  public ionViewWillLeave(): void {\n    this.deviceService.disableScreenshotProtection()\n  }\n\n  public goToSecretSetupPage(): void {\n    const signer: BIPSigner = new BIPSigner()\n\n    const secret: MnemonicSecret = new MnemonicSecret(signer.mnemonicToEntropy(BIPSigner.prepareMnemonic(this.childMnemonic)))\n\n    this.navigationService\n      .routeWithState('secret-add', { secret: new MnemonicSecret(secret.secretHex, `BIP85 child of \"${this.secret.label}\"`) })\n      .catch(handleErrorLocal(ErrorCategory.IONIC_NAVIGATION))\n  }\n\n  private async generateChildMnemonic(secret: MnemonicSecret, length: 12 | 18 | 24, index: number) {\n    const secureStorage: SecureStorage = await this.secureStorageService.get(secret.id, secret.isParanoia)\n\n    try {\n      const secretHex = await secureStorage.getItem(secret.id).then((result) => result.value)\n\n      const masterSeed = BIP85.fromEntropy(secretHex, this.bip39Passphrase)\n\n      const childEntropy = masterSeed.deriveBIP39(0, length, index)\n\n      this.childMnemonic = childEntropy.toMnemonic()\n    } catch (error) {\n      throw error\n    }\n  }\n}\n","<ion-header class=\"ion-no-border\">\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button></ion-back-button>\n    </ion-buttons>\n    <ion-title>{{ 'bip85-show.title' | translate }}</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"ion-padding\">\n  <p class=\"ion-padding-bottom\">{{ 'bip85-show.text' | translate }}</p>\n  <p _ngcontent-luc-c184=\"\" class=\"font--weight__med\">{{ 'bip85-show.mnemonic-length' | translate }}</p>\n  <h3>{{mnemonicLength}}</h3>\n  <p _ngcontent-luc-c184=\"\" class=\"font--weight__med\">{{ 'bip85-show.index' | translate }}</p>\n  <h3>{{index}}</h3>\n  <h6 class=\"typography--mono\">{{ childMnemonic }}</h6>\n\n  <ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n    <ion-button shape=\"round\" color=\"primary\" (click)=\"goToSecretSetupPage()\">{{ 'bip85-show.add' | translate }}</ion-button>\n  </ion-fab>\n</ion-content>\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { FormsModule } from '@angular/forms'\n\nimport { IonicModule } from '@ionic/angular'\n\nimport { Bip85ShowPageRoutingModule } from './bip85-show-routing.module'\n\nimport { Bip85ShowPage } from './bip85-show.page'\nimport { TranslateModule } from '@ngx-translate/core'\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, Bip85ShowPageRoutingModule, TranslateModule],\n  declarations: [Bip85ShowPage]\n})\nexport class Bip85ShowPageModule {}\n","import { BIP32Interface, fromBase58, fromSeed } from 'bip32'\nimport { validateMnemonic, entropyToMnemonic, mnemonicToSeedSync } from 'bip39'\nimport { BIP85Child } from './BIP85Child'\n\nimport * as createHmac from 'create-hmac'\n\nexport function checkValidIndex(index: number): boolean {\n  return typeof index === 'number' && index >= 0\n}\n\n// Copied from https://github.com/bitcoinjs/bip32/blob/master/ts-src/crypto.ts because it is not exported\nexport function hmacSHA512(key: Buffer, data: Buffer): Buffer {\n  return createHmac('sha512', key).update(data).digest()\n}\n\n// https://github.com/bitcoin/bips/blob/master/bip-0085.mediawiki\n\n/**\n * Constants defined in BIP-85\n */\nconst BIP85_KEY: string = 'bip-entropy-from-k'\nconst BIP85_DERIVATION_PATH: number = 83696968\nexport enum BIP85_APPLICATIONS {\n  BIP39 = 39,\n  WIF = 2,\n  XPRV = 32,\n  HEX = 128169\n}\n\n/**\n * BIP-85 helper types\n */\ntype BIP85_WORD_LENGTHS = 12 | 18 | 24\n\ntype BIP39_LANGUAGES = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8\n\n/**\n * Derive BIP-39 child entropy from a BIP-32 root key\n */\nexport class BIP85 {\n  private node: BIP32Interface\n\n  constructor(node: BIP32Interface) {\n    this.node = node\n  }\n\n  deriveBIP39(language: BIP39_LANGUAGES, words: BIP85_WORD_LENGTHS, index: number = 0): BIP85Child {\n    if (!checkValidIndex(index)) {\n      throw new Error('BIP39 invalid index')\n    }\n\n    if (typeof language !== 'number') {\n      throw new Error('BIP39 invalid language type')\n    }\n\n    if (!(language >= 0 && language <= 8)) {\n      throw new Error('BIP39 invalid language')\n    }\n\n    const entropyLength: 16 | 24 | 32 = ((): 16 | 24 | 32 => {\n      switch (words) {\n        case 12:\n          return 16\n        case 18:\n          return 24\n        case 24:\n          return 32\n\n        default:\n          throw new Error('BIP39 invalid mnemonic length')\n      }\n    })()\n\n    const entropy = this.derive(`m/${BIP85_DERIVATION_PATH}'/${BIP85_APPLICATIONS.BIP39}'/${language}'/${words}'/${index}'`, entropyLength)\n\n    return new BIP85Child(entropy, BIP85_APPLICATIONS.BIP39)\n  }\n\n  deriveWIF(index: number = 0): BIP85Child {\n    if (!checkValidIndex(index)) {\n      throw new Error('WIF invalid index')\n    }\n\n    const entropy = this.derive(`m/${BIP85_DERIVATION_PATH}'/${BIP85_APPLICATIONS.WIF}'/${index}'`, 32)\n\n    return new BIP85Child(entropy, BIP85_APPLICATIONS.WIF)\n  }\n\n  deriveXPRV(index: number = 0): BIP85Child {\n    if (!checkValidIndex(index)) {\n      throw new Error('XPRV invalid index')\n    }\n\n    const entropy = this.derive(`m/${BIP85_DERIVATION_PATH}'/${BIP85_APPLICATIONS.XPRV}'/${index}'`, 64)\n\n    return new BIP85Child(entropy, BIP85_APPLICATIONS.XPRV)\n  }\n\n  deriveHex(numBytes: number, index: number = 0): BIP85Child {\n    if (!checkValidIndex(index)) {\n      throw new Error('HEX invalid index')\n    }\n\n    if (typeof numBytes !== 'number') {\n      throw new Error('HEX invalid byte length type')\n    }\n\n    if (numBytes < 16 || numBytes > 64) {\n      throw new Error('HEX invalid byte length')\n    }\n\n    const entropy = this.derive(`m/${BIP85_DERIVATION_PATH}'/${BIP85_APPLICATIONS.HEX}'/${numBytes}'/${index}'`, numBytes)\n\n    return new BIP85Child(entropy, BIP85_APPLICATIONS.HEX)\n  }\n\n  derive(path: string, bytesLength: number = 64): string {\n    const childNode: BIP32Interface = this.node.derivePath(path)\n    const childPrivateKey: Buffer = childNode.privateKey! // Child derived from root key always has private key\n\n    const hash: Buffer = hmacSHA512(Buffer.from(BIP85_KEY), childPrivateKey)\n    const truncatedHash: Buffer = hash.slice(0, bytesLength)\n\n    const childEntropy: string = truncatedHash.toString('hex')\n\n    return childEntropy\n  }\n\n  static fromBase58(bip32seed: string): BIP85 {\n    const node: BIP32Interface = fromBase58(bip32seed)\n    if (node.depth !== 0) {\n      throw new Error('Expected master, got child')\n    }\n\n    return new BIP85(node)\n  }\n\n  static fromSeed(bip32seed: Buffer): BIP85 {\n    const node: BIP32Interface = fromSeed(bip32seed)\n    if (node.depth !== 0) {\n      throw new Error('Expected master, got child')\n    }\n\n    return new BIP85(node)\n  }\n\n  static fromEntropy(entropy: string, password: string = ''): BIP85 {\n    const mnemonic = entropyToMnemonic(entropy)\n\n    return BIP85.fromMnemonic(mnemonic, password)\n  }\n\n  static fromMnemonic(mnemonic: string, password: string = ''): BIP85 {\n    if (!validateMnemonic(mnemonic)) {\n      throw new Error('Invalid mnemonic')\n    }\n\n    const seed = mnemonicToSeedSync(mnemonic, password)\n\n    return BIP85.fromSeed(seed)\n  }\n}\n"],"sourceRoot":"webpack:///"}