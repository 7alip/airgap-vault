{"version":3,"sources":["./src/app/pages/tab-accounts/tab-accounts.module.ts","./src/app/services/mode/mode.service.ts","./src/app/services/mode/strategy/basic-mode.service.ts","./src/app/pages/tab-accounts/tab-accounts.page.ts","./src/app/pages/tab-accounts/tab-accounts.page.html","./src/app/services/mode/strategy/advanced-mode.service.ts"],"names":[],"mappings":"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","file":"tab-accounts-tab-accounts-module.js","sourcesContent":["import { AirGapAngularCoreModule } from '@airgap/angular-core'\nimport { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { RouterModule, Routes } from '@angular/router'\nimport { IonicModule } from '@ionic/angular'\nimport { TranslateModule } from '@ngx-translate/core'\n\nimport { ComponentsModule } from '../../components/components.module'\nimport { PipesModule } from '../../pipes/pipes.module'\n\nimport { TabAccountsPage } from './tab-accounts.page'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TabAccountsPage\n  }\n]\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ComponentsModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    TranslateModule,\n    PipesModule,\n    AirGapAngularCoreModule\n  ],\n  declarations: [TabAccountsPage]\n})\nexport class TabAccountsPageModule {}\n","import { Injectable } from '@angular/core'\n\nimport { VaultStorageKey, VaultStorageService } from '../storage/storage.service'\n\nimport { AdvancedModeSerivce } from './strategy/advanced-mode.service'\nimport { BasicModeService } from './strategy/basic-mode.service'\nimport { ModeStrategy } from './strategy/ModeStrategy'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModeService {\n  constructor(\n    private readonly storage: VaultStorageService,\n    private readonly advancedModeService: AdvancedModeSerivce,\n    private readonly basicModeService: BasicModeService\n  ) {}\n\n  public async strategy(): Promise<ModeStrategy> {\n    const advancedMode: boolean = await this.storage.get(VaultStorageKey.ADVANCED_MODE)\n\n    return advancedMode ? this.advancedModeService : this.basicModeService\n  }\n}\n","import { UiEventService } from '@airgap/angular-core'\nimport { IACMessageDefinitionObjectV3 } from '@airgap/coinlib-core'\nimport { Injectable } from '@angular/core'\nimport { first } from 'rxjs/operators'\n\nimport { MnemonicSecret } from '../../../models/secret'\nimport { InteractionOperationType, InteractionService } from '../../interaction/interaction.service'\nimport { MigrationService } from '../../migration/migration.service'\nimport { SecretsService } from '../../secrets/secrets.service'\nimport { ShareUrlService } from '../../share-url/share-url.service'\n\nimport { ModeStrategy } from './ModeStrategy'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BasicModeService implements ModeStrategy {\n  constructor(\n    private readonly secretsService: SecretsService,\n    private readonly shareUrlService: ShareUrlService,\n    private readonly interactionService: InteractionService,\n    private readonly migrationService: MigrationService,\n    private readonly uiEventService: UiEventService\n  ) {}\n\n  public async syncAll(): Promise<void> {\n    const secrets: MnemonicSecret[] = await this.secretsService.getSecretsObservable().pipe(first()).toPromise()\n    await this.migrationService.runSecretsMigration(secrets)\n    const [migratedSecrets, allMigrated]: [MnemonicSecret[], boolean] = this.migrationService.deepFilterMigratedSecretsAndWallets(secrets)\n    if (migratedSecrets.length === 0) {\n      await this.showNoMigratedWalletsAlert()\n      return\n    }\n\n    const shareUrl: IACMessageDefinitionObjectV3[] = await this.shareUrlService.generateShareSecretsURL(migratedSecrets)\n\n    if (allMigrated) {\n      this.syncAccounts(shareUrl)\n    } else {\n      await this.showExcludedLegacyAccountsAlert(shareUrl)\n    }\n  }\n\n  private syncAccounts(shareUrl: IACMessageDefinitionObjectV3[]): void {\n    this.interactionService.startInteraction({\n      operationType: InteractionOperationType.WALLET_SYNC,\n      iacMessage: shareUrl // JGD rename shareUrl\n    })\n  }\n\n  private async showNoMigratedWalletsAlert(): Promise<void> {\n    await this.uiEventService.showTranslatedAlert({\n      header: 'wallet-share-select.alert.wallets-not-migrated.header',\n      message: 'wallet-share-select.alert.wallets-not-migrated.message',\n      backdropDismiss: true,\n      buttons: [\n        {\n          text: 'wallet-share-select.alert.wallets-not-migrated.button_label'\n        }\n      ]\n    })\n  }\n\n  private async showExcludedLegacyAccountsAlert(shareUrl: IACMessageDefinitionObjectV3[]): Promise<void> {\n    await this.uiEventService.showTranslatedAlert({\n      header: 'wallet-share-select.alert.excluded-legacy-accounts.header',\n      message: 'wallet-share-select.alert.excluded-legacy-accounts.message',\n      backdropDismiss: true,\n      buttons: [\n        {\n          text: 'wallet-share-select.alert.excluded-legacy-accounts.button-reject_label'\n        },\n        {\n          text: 'wallet-share-select.alert.excluded-legacy-accounts.button-accept_label',\n          handler: () => {\n            this.syncAccounts(shareUrl)\n          }\n        }\n      ]\n    })\n  }\n}\n","import { AirGapWallet, AirGapWalletStatus } from '@airgap/coinlib-core'\nimport { Component, OnInit } from '@angular/core'\nimport { Platform } from '@ionic/angular'\nimport { BehaviorSubject, Observable } from 'rxjs'\n\nimport { MnemonicSecret } from '../../models/secret'\nimport { ErrorCategory, handleErrorLocal } from '../../services/error-handler/error-handler.service'\nimport { ModeService } from '../../services/mode/mode.service'\nimport { ModeStrategy } from '../../services/mode/strategy/ModeStrategy'\nimport { NavigationService } from '../../services/navigation/navigation.service'\nimport { SecretsService } from '../../services/secrets/secrets.service'\nimport { SecretEditAction } from '../secret-edit/secret-edit.page'\n\n@Component({\n  selector: 'airgap-tab-accounts',\n  templateUrl: './tab-accounts.page.html',\n  styleUrls: ['./tab-accounts.page.scss']\n})\nexport class TabAccountsPage implements OnInit {\n  public readonly secrets: Observable<MnemonicSecret[]>\n  public activeSecret: MnemonicSecret\n\n  public symbolFilter: string | undefined\n\n  public wallets$: BehaviorSubject<AirGapWallet[]> = new BehaviorSubject<AirGapWallet[]>([])\n\n  public readonly isAndroid: boolean\n\n  public readonly AirGapWalletStatus: typeof AirGapWalletStatus = AirGapWalletStatus\n\n  constructor(\n    private readonly platform: Platform,\n    private readonly secretsService: SecretsService,\n    private readonly navigationService: NavigationService,\n    private readonly modeService: ModeService\n  ) {\n    this.secrets = this.secretsService.getSecretsObservable()\n    this.isAndroid = this.platform.is('android')\n  }\n\n  public async ngOnInit(): Promise<void> {\n    this.secretsService.getActiveSecretObservable().subscribe((secret: MnemonicSecret) => {\n      if (secret && secret.wallets) {\n        this.activeSecret = secret\n        this.wallets$.next([...secret.wallets])\n      }\n    })\n\n    this.secrets.subscribe(async (secrets: MnemonicSecret[]) => {\n      if (secrets.length === 0) {\n        this.navigationService.route('/secret-setup/initial').catch(handleErrorLocal(ErrorCategory.IONIC_NAVIGATION))\n      }\n    }) // We should never unsubscribe, because we need to watch this in case a user deletes all his secrets\n  }\n\n  public goToReceiveAddress(wallet: AirGapWallet): void {\n    this.navigationService.routeWithState('/account-address', { wallet }).catch(handleErrorLocal(ErrorCategory.IONIC_NAVIGATION))\n  }\n\n  public filterItems(event: any): void {\n    function isValidSymbol(data: unknown): data is string {\n      return data && typeof data === 'string' && data !== ''\n    }\n\n    const value: unknown = event.target.value\n\n    this.symbolFilter = isValidSymbol(value) ? value.trim().toLowerCase() : undefined\n  }\n\n  public async syncWallets(): Promise<void> {\n    const strategy: ModeStrategy = await this.modeService.strategy()\n    await strategy.syncAll()\n  }\n\n  public addWallet(): void {\n    this.navigationService.route('/account-add').catch(handleErrorLocal(ErrorCategory.IONIC_NAVIGATION))\n  }\n\n  public navigateToRecoverySettings() {\n    this.navigationService\n      .routeWithState('/secret-edit', {\n        secret: this.activeSecret,\n        action: SecretEditAction.SET_RECOVERY_KEY\n      })\n      .catch(handleErrorLocal(ErrorCategory.IONIC_NAVIGATION))\n  }\n}\n","<ion-header class=\"ion-no-border\">\n  <ion-toolbar color=\"secondary\">\n    <ion-title>{{ 'tab-wallets.title' | translate }}</ion-title>\n  </ion-toolbar>\n\n  <ion-toolbar color=\"secondary\">\n    <airgap-current-secret></airgap-current-secret>\n  </ion-toolbar>\n\n  <ion-toolbar color=\"secondary\">\n    <ion-searchbar placeholder=\"{{ 'tab-wallets.search_placeholder' | translate }}\" (ionInput)=\"filterItems($event)\"></ion-searchbar>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content *ngIf=\"wallets$\" class=\"ion-padding-horizontal\">\n  <ion-item\n    *ngIf=\"isAndroid && activeSecret && !activeSecret.hasRecoveryKey\"\n    lines=\"none\"\n    detail=\"true\"\n    class=\"ion-margin-vertical\"\n    color=\"warning\"\n    (click)=\"navigateToRecoverySettings()\"\n  >\n    <ion-icon name=\"exit\" slot=\"start\" color=\"dark\"></ion-icon>\n    <ion-label color=\"dark\" class=\"ion-text-wrap\">\n      <h3><strong>{{ 'tab-wallets.generate-recovery-key.title' | translate }}</strong></h3>\n      <p>{{ 'tab-wallets.generate-recovery-key.description' | translate }}</p>\n    </ion-label>\n  </ion-item>\n\n  <ion-list>\n    <ng-container *ngFor=\"let wallet of wallets$ | async | walletFilter: { status: AirGapWalletStatus.ACTIVE, symbol: symbolFilter }\">\n      <airgap-account-item [wallet]=\"wallet\" (click)=\"goToReceiveAddress(wallet)\"></airgap-account-item>\n    </ng-container>\n  </ion-list>\n  <ion-row>\n    <div\n      class=\"empty-list\"\n      *ngIf=\"wallets$ && (wallets$ | async | walletFilter: { status: AirGapWalletStatus.ACTIVE, symbol: symbolFilter }).length === 0\"\n    >\n      <img src=\"./assets/img/no-wallet-added-onboarding.svg\" />\n      <p>\n        <strong>{{ 'tab-wallets.empty-state_text' | translate }}</strong>\n      </p>\n    </div>\n  </ion-row>\n\n  <ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n    <!-- <ion-button color=\"secondary\" shape=\"round\" (click)=\"addWallet()\">\n      <ion-icon slot=\"start\" name=\"add\"></ion-icon>\n      {{ 'tab-wallets.add-wallet_label' | translate }}\n    </ion-button> -->\n\n    <ion-fab-button color=\"secondary\">\n      <ion-icon name=\"chevron-up-outline\"></ion-icon>\n    </ion-fab-button>\n    <ion-fab-list side=\"top\">\n      <ion-fab-button color=\"secondary\" (click)=\"syncWallets()\">\n        <ion-icon name=\"sync-outline\"></ion-icon>\n      </ion-fab-button>\n      <ion-fab-button color=\"secondary\" (click)=\"addWallet()\">\n        <ion-icon name=\"add\"></ion-icon>\n      </ion-fab-button>\n    </ion-fab-list>\n  </ion-fab>\n</ion-content>\n","import { Injectable } from '@angular/core'\n\nimport { ErrorCategory, handleErrorLocal } from '../../error-handler/error-handler.service'\nimport { NavigationService } from '../../navigation/navigation.service'\n\nimport { ModeStrategy } from './ModeStrategy'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdvancedModeSerivce implements ModeStrategy {\n  constructor(private readonly navigationService: NavigationService) {}\n\n  public async syncAll(): Promise<void> {\n    await this.navigationService.route('/account-share-select').catch(handleErrorLocal(ErrorCategory.IONIC_NAVIGATION))\n  }\n}\n"],"sourceRoot":"webpack:///"}