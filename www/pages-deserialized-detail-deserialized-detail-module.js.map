{"version":3,"sources":["./src/app/pages/deserialized-detail/deserialized-detail.page.ts","./src/app/pages/deserialized-detail/deserialized-detail.page.html","./src/app/pages/deserialized-detail/deserialized-detail.actions.ts","./src/app/pages/deserialized-detail/deserialized-detail.effects.ts","./src/app/pages/deserialized-detail/deserialized-detail.module.ts","./src/app/pages/deserialized-detail/deserialized.detail.types.ts","./src/app/pages/deserialized-detail/deserialized-detail.reducer.ts"],"names":[],"mappings":"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","file":"pages-deserialized-detail-deserialized-detail-module.js","sourcesContent":["import { assertNever, UIAction, UIActionStatus, UiEventService, UIResource, UIResourceStatus } from '@airgap/angular-core'\nimport { IAirGapTransaction, ProtocolSymbols } from '@airgap/coinlib-core'\nimport { Component, OnDestroy } from '@angular/core'\nimport { ModalController } from '@ionic/angular'\nimport { AlertOptions, LoadingOptions, ModalOptions, OverlayEventDetail } from '@ionic/core'\nimport { Store } from '@ngrx/store'\nimport { Observable, Subject } from 'rxjs'\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators'\n\nimport { ErrorCategory, handleErrorLocal } from '../../services/error-handler/error-handler.service'\nimport { SelectAccountPage } from '../select-account/select-account.page'\n\nimport * as actions from './deserialized-detail.actions'\nimport * as fromDeserializedDetail from './deserialized-detail.reducer'\nimport { Alert, Modal, Mode, Task, UnsignedMessage } from './deserialized.detail.types'\n\ntype ModalOnDismissAction = (modalData: OverlayEventDetail<unknown>) => Promise<void>\n\n@Component({\n  selector: 'airgap-deserialized-detail',\n  templateUrl: './deserialized-detail.page.html',\n  styleUrls: ['./deserialized-detail.page.scss']\n})\nexport class DeserializedDetailPage implements OnDestroy {\n  public readonly mode$: Observable<Mode | undefined>\n  public readonly title$: Observable<string>\n  public readonly button$: Observable<string | undefined>\n\n  public readonly transactionsDetails$: Observable<UIResource<IAirGapTransaction[]>>\n  public readonly messages$: Observable<UIResource<UnsignedMessage[]>>\n  public readonly rawData$: Observable<UIResource<string>>\n\n  public readonly loader$: Observable<(UIAction<Task> & { userInput: actions.UserInput }) | undefined>\n  public readonly alert$: Observable<UIAction<Alert> | undefined>\n  public readonly modal$: Observable<UIAction<Modal> | undefined>\n\n  public readonly Mode: typeof Mode = Mode\n  public readonly UIResourceStatus: typeof UIResourceStatus = UIResourceStatus\n\n  private loadingElement: HTMLIonLoadingElement | undefined\n  private alertElement: HTMLIonAlertElement | undefined\n  private modalElement: HTMLIonModalElement | undefined\n  private readonly ngDestroyed$: Subject<void> = new Subject()\n\n  constructor(\n    private readonly store: Store<fromDeserializedDetail.State>,\n    private readonly uiEventService: UiEventService,\n    private readonly modalController: ModalController\n  ) {\n    this.mode$ = this.store.select(fromDeserializedDetail.selectMode)\n    this.title$ = this.store.select(fromDeserializedDetail.selectTitle)\n    this.button$ = this.store.select(fromDeserializedDetail.selectButton)\n\n    this.loader$ = this.store.select(fromDeserializedDetail.selectLoader)\n    this.alert$ = this.store.select(fromDeserializedDetail.selectAlert)\n    this.modal$ = this.store.select(fromDeserializedDetail.selectModal)\n\n    this.transactionsDetails$ = this.store.select(fromDeserializedDetail.selectTransactionsDetails)\n    this.messages$ = this.store.select(fromDeserializedDetail.selectMessagesData)\n\n    this.rawData$ = this.store.select(fromDeserializedDetail.selectRaw)\n\n    // FIXME [#210] set debounce time\n    this.loader$.pipe(debounceTime(0), distinctUntilChanged(), takeUntil(this.ngDestroyed$)).subscribe(this.showOrHideLoader.bind(this))\n    this.alert$.pipe(takeUntil(this.ngDestroyed$)).subscribe(this.showOrDismissAlert.bind(this))\n    this.modal$.pipe(takeUntil(this.ngDestroyed$)).subscribe(this.showOrDismissModal.bind(this))\n\n    this.store.dispatch(actions.viewInitialization())\n  }\n\n  public ngOnDestroy(): void {\n    this.ngDestroyed$.next()\n    this.ngDestroyed$.complete()\n  }\n\n  public continue(): void {\n    this.store.dispatch(actions.approved())\n  }\n\n  private async showOrHideLoader(task: (UIAction<Task> & { userInput: actions.UserInput }) | undefined): Promise<void> {\n    this.loadingElement?.dismiss().catch(handleErrorLocal(ErrorCategory.IONIC_LOADER))\n    if (task?.status === UIActionStatus.PENDING) {\n      this.loadingElement = await this.uiEventService.getTranslatedLoader(this.getLoaderData(task.value))\n\n      // return this.loadingElement.present().catch(handleErrorLocal(ErrorCategory.IONIC_LOADER))\n\n      // FIXME [#210]: replace with the above once the performance issue is resolved\n      await this.loadingElement.present().catch(handleErrorLocal(ErrorCategory.IONIC_LOADER))\n      this.store.dispatch(actions.continueApproved({ userInput: task.userInput }))\n      // [#210]\n    } else {\n      this.loadingElement = undefined\n    }\n  }\n\n  private async showOrDismissAlert(alert: UIAction<Alert> | undefined): Promise<void> {\n    this.alertElement?.dismiss().catch(handleErrorLocal(ErrorCategory.IONIC_ALERT))\n    if (alert?.status === UIActionStatus.PENDING) {\n      this.alertElement = await this.uiEventService.getTranslatedAlert(this.getAlertData(alert.value))\n      this.alertElement.present().catch(handleErrorLocal(ErrorCategory.IONIC_ALERT))\n\n      return this.alertElement\n        .onWillDismiss()\n        .then(() => {\n          this.store.dispatch(actions.alertDismissed({ id: alert.id }))\n        })\n        .catch(handleErrorLocal(ErrorCategory.IONIC_ALERT))\n    } else {\n      this.alertElement = undefined\n    }\n  }\n\n  private async showOrDismissModal(modal: UIAction<Modal> | undefined): Promise<void> {\n    this.modalElement?.dismiss().catch(handleErrorLocal(ErrorCategory.IONIC_MODAL))\n    if (modal?.status === UIActionStatus.PENDING) {\n      const [modalOptions, onDismissAction]: [ModalOptions, ModalOnDismissAction] = this.getModalData(modal.value)\n      this.modalElement = await this.modalController.create(modalOptions)\n      this.modalElement.present().catch(handleErrorLocal(ErrorCategory.IONIC_MODAL))\n\n      return this.modalElement\n        .onWillDismiss()\n        .then(\n          (data: OverlayEventDetail<unknown>): Promise<void> => {\n            this.store.dispatch(actions.modalDismissed({ id: modal.id }))\n\n            return onDismissAction(data)\n          }\n        )\n        .catch(handleErrorLocal(ErrorCategory.IONIC_MODAL))\n    } else {\n      this.modalElement = undefined\n    }\n  }\n\n  private getLoaderData(task: Task): LoadingOptions {\n    switch (task) {\n      case 'signTransaction':\n        return this.signTransactionLoader()\n      case 'signMessage':\n        return this.signMessageLoader()\n      case 'generic':\n        return this.genericLoader()\n      default:\n        assertNever('getLoaderData', task)\n    }\n  }\n\n  private signTransactionLoader(): LoadingOptions {\n    return {\n      message: 'deserialized-detail.loader.sign-transaction.message'\n    }\n  }\n\n  private signMessageLoader(): LoadingOptions {\n    return {\n      message: 'deserialized-detail.loader.sign-message.message'\n    }\n  }\n\n  private genericLoader(): LoadingOptions {\n    return {\n      message: 'deserialized-detail.loader.generic.message'\n    }\n  }\n\n  private getAlertData(alert: Alert): AlertOptions {\n    switch (alert.type) {\n      case 'bip39Passphrase':\n        return this.bip39PassphraseAlert()\n      case 'bip39PassphraseError':\n        return this.bip39PassphraseErrorAlert()\n      case 'secretNotFound':\n        return this.secretNotFoundErrorAlert()\n      case 'unknownError':\n        return this.unknownErrorAlert(alert.message)\n      default:\n        assertNever('getAlertData', alert)\n    }\n  }\n\n  private bip39PassphraseAlert(): AlertOptions {\n    return {\n      header: 'deserialized-detail.alert.bip39-passphrase.header',\n      message: 'deserialized-detail.alert.bip39-passphrase.message',\n      backdropDismiss: false,\n      inputs: [\n        {\n          name: 'bip39Passphrase',\n          type: 'password',\n          placeholder: 'deserialized-detail.alert.bip39-passphrase.input-placeholder_label'\n        }\n      ],\n      buttons: [\n        {\n          text: 'deserialized-detail.alert.bip39-passphrase.button_label',\n          handler: async (result: { bip39Passphrase: string }): Promise<void> => {\n            const passphrase: string = result.bip39Passphrase ?? ''\n            this.store.dispatch(actions.bip39PassphraseProvided({ passphrase }))\n          }\n        }\n      ]\n    }\n  }\n\n  private bip39PassphraseErrorAlert(): AlertOptions {\n    return {\n      header: 'deserialized-detail.alert.bip39-passphrase-error.header',\n      message: 'deserialized-detail.alert.bip39-passphrase-error.message',\n      backdropDismiss: false,\n      buttons: [\n        {\n          text: 'deserialized-detail.alert.bip39-passphrase-error.button_label'\n        }\n      ]\n    }\n  }\n\n  private secretNotFoundErrorAlert(): AlertOptions {\n    return {\n      header: 'deserialized-detail.alert.secret-not-found-error.header',\n      message: 'deserialized-detail.alert.secret-not-found-error.message',\n      backdropDismiss: false,\n      buttons: [\n        {\n          text: 'deserialized-detail.alert.secret-not-found-error.button_label'\n        }\n      ]\n    }\n  }\n\n  private unknownErrorAlert(message?: string): AlertOptions {\n    return {\n      header: 'deserialized-detail.alert.unknown-error.header',\n      message: message ?? 'deserialized-detail.alert.unknown-error.message',\n      backdropDismiss: true,\n      buttons: [\n        {\n          text: 'deserialized-detail.alert.unknown-error.button_label'\n        }\n      ]\n    }\n  }\n\n  private getModalData(modal: Modal): [ModalOptions, ModalOnDismissAction] {\n    switch (modal) {\n      case 'selectSigningAccount':\n        return this.selectSigningAccountModal()\n      default:\n        assertNever('getModalData', modal)\n    }\n  }\n\n  private selectSigningAccountModal(): [ModalOptions, ModalOnDismissAction] {\n    const options: ModalOptions = {\n      component: SelectAccountPage,\n      componentProps: { type: 'message-signing' }\n    }\n\n    const action: ModalOnDismissAction = async (modalData: OverlayEventDetail<unknown>): Promise<void> => {\n      if (modalData.data === undefined || typeof modalData.data !== 'string') {\n        return\n      }\n\n      this.store.dispatch(actions.signingProtocolProvided({ protocol: modalData.data as ProtocolSymbols }))\n    }\n\n    return [options, action]\n  }\n}\n","<ion-header class=\"ion-no-border\">\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button></ion-back-button>\n    </ion-buttons>\n    <ion-title>{{ title$ | async }}</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"deserialized-content ion-padding\">\n  <ng-container *ngIf=\"(mode$ | async) === Mode.SIGN_TRANSACTION\">\n    <ng-container *ngIf=\"(transactionsDetails$ | async).status === UIResourceStatus.SUCCESS\">\n      <airgap-transaction [airGapTxs]=\"(transactionsDetails$ | async).value\"></airgap-transaction>\n    </ng-container>\n\n    <ion-grid\n      *ngIf=\"(transactionsDetails$ | async).status === UIResourceStatus.ERROR \n        && (rawData$ | async).status === UIResourceStatus.SUCCESS\"\n    >\n      <ion-row>\n        <ion-col size=\"2\" class=\"ion-margin-top\">\n          <ion-icon color=\"white\" src=\"assets/icons/md-warning.svg\" class=\"warning-icon\"></ion-icon>\n        </ion-col>\n        <ion-col size=\"10\">{{ 'deserialized-detail.transaction.unreadable_warning' | translate }}</ion-col>\n      </ion-row>\n      <ion-row>\n        <ion-col size=\"12\">\n          <ion-text>\n            <p class=\"text--selectable typography--mono word-break__all\">{{ (rawData$ | async).value }}</p>\n          </ion-text>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n  </ng-container>\n\n  <ng-container *ngIf=\"(mode$ | async) === Mode.SIGN_MESSAGE\">\n    <ng-container *ngIf=\"(messages$ | async).status === UIResourceStatus.SUCCESS\">\n      <airgap-message-sign-request [messages]=\"(messages$ | async).value\"></airgap-message-sign-request>\n    </ng-container>\n  </ng-container>\n\n  <ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\" *ngIf=\"(button$ | async) as button\">\n    <ion-button color=\"primary\" shape=\"round\" (click)=\"continue()\">\n      <ion-icon slot=\"start\" src=\"assets/icons/md-check.svg\"></ion-icon>\n      {{ button }}\n    </ion-button>\n  </ion-fab>\n</ion-content>\n","import { ProtocolSymbols } from '@airgap/coinlib-core'\nimport { createAction, props } from '@ngrx/store'\n\n// tslint:disable: typedef\nimport {\n  DeserializedMessage,\n  DeserializedSignedMessage,\n  DeserializedSignedTransaction,\n  DeserializedTransaction,\n  Task,\n  Mode\n} from './deserialized.detail.types'\n\n// FIXME [#210]: remove once the performance issue is resolved\nexport interface UserInput {\n  bip39Passphrase?: string\n  protocol?: ProtocolSymbols\n}\n// [#210]\n\nconst featureName = 'Deserialized Detail'\n\n/**************** View Lifecycle ****************/\n\nexport const viewInitialization = createAction(`[${featureName}] View Initialization`)\n\n/**************** Navigation Data ****************/\n\nexport const navigationDataLoading = createAction(`[${featureName}] Navigation Data Loading`)\nexport const navigationDataLoaded = createAction(\n  `[${featureName}] Navigation Data Loaded`,\n  props<{\n    mode: Mode\n    title: string\n    button: string | undefined\n    transactions: DeserializedTransaction[]\n    messages: DeserializedMessage[]\n    raw: string\n  }>()\n)\nexport const navigationDataLoadingError = createAction(\n  `[${featureName}] Navigation Data Loading Error`,\n  props<{ mode: Mode; title: string; button: string | undefined; raw: string }>()\n)\nexport const invalidData = createAction(`[${featureName}] Invalid Navigation Data`)\n\n/**************** User Interaction ****************/\n\nexport const approved = createAction(`[${featureName}] Approved`)\n\n// FIXME [#210]: remove once the performance issue is resolved\nexport const continueApproved = createAction(`[${featureName}] Continue Approved`, props<{ userInput: UserInput }>())\n// [#210]\n\nexport const alertDismissed = createAction(`[${featureName}] Alert Dismissed`, props<{ id: string }>())\nexport const modalDismissed = createAction(`[${featureName}] Modal Dismissed`, props<{ id: string }>())\n\nexport const bip39PassphraseProvided = createAction(`[${featureName}] BIP-39 Passphrase Provided`, props<{ passphrase: string }>())\nexport const signingProtocolProvided = createAction(`[${featureName}] Signing Protocol Provided`, props<{ protocol: ProtocolSymbols }>())\n\n/**************** Internal ****************/\n\n// export const runningBlockingTask = createAction(`[${featureName}] Running Blocking Task`, props<{ task: Task }>())\n\n// FIXME [#210] replace with the above once the performance issue is resolved\nexport const runningBlockingTask = createAction(`[${featureName}] Running Blocking Task`, props<{ task: Task; userInput: UserInput }>())\n// [#210]\n\nexport const transactionsSigned = createAction(\n  `[${featureName}] Transactions Signed`,\n  props<{ transactions: DeserializedSignedTransaction[] }>()\n)\nexport const messagesSigned = createAction(`[${featureName}] Messages Signed`, props<{ messages: DeserializedSignedMessage[] }>())\n\nexport const loaderDismissed = createAction(`[${featureName}] Loader Dismissed`, props<{ id: string }>())\n\nexport const secretNotFound = createAction(`[${featureName}] Secret Not Found`)\nexport const protocolNotFound = createAction(`[${featureName}] Protocol Not Found`)\nexport const invalidBip39Passphrase = createAction(`[${featureName}] Invalid BIP-39 Passphrase`)\n\nexport const unknownError = createAction(`[${featureName}] Unknown Error`, props<{ message?: string }>())\n","import {\n  assertNever,\n  flattenAirGapTxAddresses,\n  KeyPairService,\n  ProtocolService,\n  sumAirGapTxValues,\n  TransactionService\n} from '@airgap/angular-core'\nimport {\n  AirGapWallet,\n  IACMessageDefinitionObjectV3,\n  IACMessageType,\n  IAirGapTransaction,\n  ICoinProtocol,\n  MainProtocolSymbols,\n  MessageSignRequest,\n  ProtocolSymbols,\n  SignedTransaction,\n  TezosCryptoClient,\n  TezosSaplingProtocol,\n  UnsignedTransaction\n} from '@airgap/coinlib-core'\nimport { Injectable } from '@angular/core'\nimport { Actions, createEffect, ofType } from '@ngrx/effects'\nimport { Action, Store } from '@ngrx/store'\nimport { TranslateService } from '@ngx-translate/core'\nimport * as bip39 from 'bip39'\nimport { concat, from, of } from 'rxjs'\nimport { concatMap, first, switchMap, tap, withLatestFrom } from 'rxjs/operators'\n\nimport { MnemonicSecret } from '../../models/secret'\nimport { SignTransactionInfo } from '../../models/sign-transaction-info'\nimport { InteractionOperationType, InteractionService } from '../../services/interaction/interaction.service'\nimport { NavigationService } from '../../services/navigation/navigation.service'\nimport { SecretsService } from '../../services/secrets/secrets.service'\n\nimport * as actions from './deserialized-detail.actions'\nimport * as fromDeserializedDetail from './deserialized-detail.reducer'\nimport {\n  DeserializedSignedMessage,\n  DeserializedSignedTransaction,\n  DeserializedUnsignedMessage,\n  DeserializedUnsignedTransaction,\n  Mode,\n  Payload,\n  Task\n} from './deserialized.detail.types'\n\n@Injectable()\nexport class DeserializedDetailEffects {\n  public navigationData$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(actions.viewInitialization),\n      switchMap(() => concat(of(actions.navigationDataLoading()), from(this.loadNavigationData()).pipe(first())))\n    )\n  )\n\n  // FIXME [#210]:\n  // We can no longer execute the signing step as a single action due to Sapling heavy computational transaction signing\n  // https://gitlab.papers.tech/papers/airgap/airgap-vault/-/issues/210\n\n  // public approved$ = createEffect(() =>\n  //   this.actions$.pipe(\n  //     ofType(actions.approved, actions.bip39PassphraseProvided, actions.signingProtocolProvided),\n  //     concatMap((action) => from([action]).pipe(withLatestFrom(this.store.select(fromDeserializedDetail.selectFinalPayload)))),\n  //     switchMap(([action, payload]) => {\n  //       const userInput = {\n  //         bip39Passphrase: 'passphrase' in action ? action.passphrase : undefined,\n  //         protocol: 'protocol' in action ? action.protocol : undefined\n  //       }\n\n  //       return concat(\n  //         of(actions.runningBlockingTask({ task: this.identifyPayloadTask(payload) })),\n  //         from(this.handlePayload(payload, userInput)).pipe(first())\n  //       )\n  //     })\n  //   )\n  // )\n  // [#210]\n\n  // FIXME [#210]: replace with the above once the performance issue is resolved\n  public approved$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(actions.approved, actions.bip39PassphraseProvided, actions.signingProtocolProvided),\n      concatMap((action) => from([action]).pipe(withLatestFrom(this.store.select(fromDeserializedDetail.selectFinalPayload)))),\n      switchMap(([action, payload]) => {\n        const userInput = {\n          bip39Passphrase: 'passphrase' in action ? action.passphrase : undefined,\n          protocol: 'protocol' in action ? action.protocol : undefined\n        }\n\n        return concat(of(actions.runningBlockingTask({ task: this.identifyPayloadTask(payload), userInput })))\n      })\n    )\n  )\n  // [#210]\n\n  // FIXME [#210]: remove once the performance issue is resolved\n  public continueApproved$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(actions.continueApproved),\n      concatMap((action) => from([action]).pipe(withLatestFrom(this.store.select(fromDeserializedDetail.selectFinalPayload)))),\n      switchMap(([action, payload]) => from(this.handlePayload(payload, action.userInput)).pipe(first()))\n    )\n  )\n  // [#210]\n\n  public navigateWithSignedTransactions$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(actions.transactionsSigned),\n        tap((action) => this.navigateWithSignedTransactions(action.transactions))\n      ),\n    { dispatch: false }\n  )\n\n  public navigateWithSignedMessages$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(actions.messagesSigned),\n        tap((action) => this.navigateWithSignedMessages(action.messages))\n      ),\n    { dispatch: false }\n  )\n\n  constructor(\n    private readonly actions$: Actions,\n    private readonly store: Store<fromDeserializedDetail.State>,\n    private readonly navigationService: NavigationService,\n    private readonly translateService: TranslateService,\n    private readonly protocolService: ProtocolService,\n    private readonly secretsService: SecretsService,\n    private readonly keyPairService: KeyPairService,\n    private readonly transactionService: TransactionService,\n    private readonly interactionService: InteractionService\n  ) { }\n\n  private async loadNavigationData(): Promise<Action> {\n    const state = this.navigationService.getState()\n    const [, messageType]: [string | undefined, string | undefined] = this.getPageTypes(state.type)\n    const mode: Mode | undefined = this.getMode(state.type)\n\n    if (messageType !== undefined && mode !== undefined && state.transactionInfos !== undefined) {\n      const title: string = this.translateService.instant(`deserialized-detail.${messageType}.title`)\n      const button: string = this.translateService.instant(`deserialized-detail.${messageType}.button_label`)\n      const raw: string = this.signTransactionInfoToRaw(state.transactionInfos)\n      try {\n        const [transactions, messages]: [DeserializedUnsignedTransaction[], DeserializedUnsignedMessage[]] = await Promise.all([\n          this.signTransactionInfoToUnsignedTransactions(state.transactionInfos),\n          this.signTransactionInfoToUnsignedMessages(state.transactionInfos)\n        ])\n\n        return actions.navigationDataLoaded({ mode, title, button, transactions, messages, raw })\n      } catch (error) {\n        // tslint:disable-next-line: no-console\n        console.warn(error)\n\n        return actions.navigationDataLoadingError({ mode, title, button, raw })\n      }\n    } else {\n      return actions.invalidData()\n    }\n  }\n\n  private getPageTypes(iacMessageType: IACMessageType | undefined): [string | undefined, string | undefined] {\n    let actionType: string | undefined\n    if (iacMessageType === IACMessageType.TransactionSignRequest || iacMessageType === IACMessageType.MessageSignRequest) {\n      actionType = 'request'\n    } else if (iacMessageType === IACMessageType.TransactionSignResponse || iacMessageType === IACMessageType.MessageSignResponse) {\n      actionType = 'response'\n    }\n\n    let messageType: string | undefined\n    if (iacMessageType === IACMessageType.TransactionSignRequest || iacMessageType === IACMessageType.TransactionSignResponse) {\n      messageType = 'transaction'\n    } else if (iacMessageType === IACMessageType.MessageSignRequest || iacMessageType === IACMessageType.MessageSignResponse) {\n      messageType = 'message'\n    }\n\n    return [actionType, messageType]\n  }\n\n  private getMode(iacMessageType: IACMessageType | undefined): Mode | undefined {\n    switch (iacMessageType) {\n      case IACMessageType.TransactionSignRequest:\n        return Mode.SIGN_TRANSACTION\n      case IACMessageType.MessageSignRequest:\n        return Mode.SIGN_MESSAGE\n      default:\n        return undefined\n    }\n  }\n\n  private signTransactionInfoToRaw(transactionInfo: SignTransactionInfo[]): string {\n    const transactions: unknown[] = transactionInfo.map((info: SignTransactionInfo): unknown => {\n      switch (info.signTransactionRequest.type) {\n        case IACMessageType.TransactionSignRequest:\n          return (info.signTransactionRequest.payload as UnsignedTransaction).transaction\n        case IACMessageType.TransactionSignResponse:\n          return (info.signTransactionRequest.payload as SignedTransaction).transaction\n        default:\n          return info.signTransactionRequest.payload\n      }\n    })\n    const toStringify: unknown | unknown[] = transactions.length > 1 ? transactions : transactions[0]\n\n    return JSON.stringify(toStringify)\n  }\n\n  private async signTransactionInfoToUnsignedTransactions(\n    transactionInfo: SignTransactionInfo[]\n  ): Promise<DeserializedUnsignedTransaction[]> {\n    return Promise.all(\n      transactionInfo\n        .map((info: SignTransactionInfo): [AirGapWallet, IACMessageDefinitionObjectV3] => [info.wallet, info.signTransactionRequest])\n        .filter(\n          ([_, request]: [AirGapWallet, IACMessageDefinitionObjectV3]): boolean => request.type === IACMessageType.TransactionSignRequest\n        )\n        .map(\n          async ([wallet, request]: [AirGapWallet, IACMessageDefinitionObjectV3]): Promise<DeserializedUnsignedTransaction> => {\n            let details: IAirGapTransaction[]\n            if (await this.checkIfSaplingTransaction(request.payload as UnsignedTransaction, request.protocol)) {\n              details = await this.transactionService.getDetailsFromIACMessages([request], {\n                overrideProtocol: await this.getSaplingProtocol(),\n                data: {\n                  knownViewingKeys: this.secretsService.getKnownViewingKeys()\n                }\n              })\n            } else {\n              details = await this.transactionService.getDetailsFromIACMessages([request])\n            }\n\n            return {\n              type: 'unsigned',\n              id: request.id,\n              details,\n              data: request.payload as UnsignedTransaction,\n              wallet,\n              originalProtocolIdentifier: request.protocol !== wallet.protocol.symbol ? request.protocol : undefined\n            }\n          }\n        )\n    )\n  }\n\n  private async signTransactionInfoToUnsignedMessages(transactionInfo: SignTransactionInfo[]): Promise<DeserializedUnsignedMessage[]> {\n    return Promise.all(\n      transactionInfo\n        .map((info: SignTransactionInfo): [AirGapWallet, IACMessageDefinitionObjectV3] => [info.wallet, info.signTransactionRequest])\n        .filter(([_, request]: [AirGapWallet, IACMessageDefinitionObjectV3]): boolean => request.type === IACMessageType.MessageSignRequest)\n        .map(\n          async ([wallet, request]: [AirGapWallet, IACMessageDefinitionObjectV3]): Promise<DeserializedUnsignedMessage> => {\n            const data: MessageSignRequest = request.payload as MessageSignRequest\n\n            let blake2bHash: string | undefined\n            if (request.protocol === MainProtocolSymbols.XTZ) {\n              const cryptoClient = new TezosCryptoClient()\n              blake2bHash = await cryptoClient.blake2bLedgerHash(data.message)\n            }\n\n            return {\n              type: 'unsigned',\n              id: request.id,\n              protocol: request.protocol,\n              data,\n              blake2bHash,\n              wallet,\n              originalProtocolIdentifier: request.protocol !== wallet.protocol.symbol ? request.protocol : undefined\n            }\n          }\n        )\n    )\n  }\n\n  private identifyPayloadTask(payload: Payload): Task {\n    switch (payload.mode) {\n      case Mode.SIGN_TRANSACTION:\n        return 'signTransaction'\n      case Mode.SIGN_MESSAGE:\n        return 'signMessage'\n      default:\n        return 'generic'\n    }\n  }\n\n  private async handlePayload(payload: Payload, userInput: { bip39Passphrase?: string; protocol?: ProtocolSymbols }): Promise<Action> {\n    switch (payload.mode) {\n      case Mode.SIGN_TRANSACTION:\n        return this.signTransactions(payload.data, userInput.bip39Passphrase)\n      case Mode.SIGN_MESSAGE:\n        return this.signMessages(payload.data, userInput.bip39Passphrase, userInput.protocol)\n      default:\n        assertNever('handlePayload', payload)\n    }\n  }\n\n  private async signTransactions(unsignedTransactions: DeserializedUnsignedTransaction[], bip39Passphrase: string = ''): Promise<Action> {\n    try {\n      const signedTransactions: DeserializedSignedTransaction[] = await Promise.all(\n        unsignedTransactions.map(\n          async (transaction: DeserializedUnsignedTransaction): Promise<DeserializedSignedTransaction> => {\n            const signed: string = await this.signTransaction(transaction.wallet, transaction.data, bip39Passphrase)\n\n            return {\n              type: 'signed',\n              id: transaction.id,\n              details: transaction.details,\n              data: {\n                accountIdentifier: transaction.wallet.publicKey.substr(-6),\n                transaction: signed,\n                callbackURL: transaction.data.callbackURL\n              },\n              wallet: transaction.wallet,\n              originalProtocolIdentifier: transaction.originalProtocolIdentifier\n            }\n          }\n        )\n      )\n\n      return actions.transactionsSigned({ transactions: signedTransactions })\n    } catch (error) {\n      // tslint:disable-next-line: no-console\n      console.warn(error)\n\n      if (error.message?.toLowerCase().startsWith('secret not found')) {\n        return actions.secretNotFound()\n      } else if (error.message?.toLowerCase().startsWith('invalid bip-39 passphrase')) {\n        return actions.invalidBip39Passphrase()\n      }\n\n      return actions.unknownError({ message: typeof error === 'string' ? error : error.message })\n    }\n  }\n\n  private async signTransaction(wallet: AirGapWallet, transaction: UnsignedTransaction, bip39Passphrase: string): Promise<string> {\n    const secret: MnemonicSecret | undefined = this.secretsService.findByPublicKey(wallet.publicKey)\n    if (secret === undefined) {\n      throw new Error('Secret not found')\n    }\n\n    const entropy: string = await this.secretsService.retrieveEntropyForSecret(secret)\n    const mnemonic: string = bip39.entropyToMnemonic(entropy)\n\n    return this.keyPairService.signWithWallet(wallet, transaction, mnemonic, bip39Passphrase)\n  }\n\n  private async signMessages(\n    unsignedMessages: DeserializedUnsignedMessage[],\n    bip39Passphrase: string = '',\n    protocolIdentifier?: ProtocolSymbols\n  ): Promise<Action> {\n    try {\n      const signedMessages: DeserializedSignedMessage[] = await Promise.all(\n        unsignedMessages.map(\n          async (message: DeserializedUnsignedMessage): Promise<DeserializedSignedMessage> => {\n            const signature: string = await this.signMessage(message.data, bip39Passphrase, message.wallet, protocolIdentifier)\n\n            return {\n              type: 'signed',\n              id: message.id,\n              protocol: message.protocol ?? protocolIdentifier,\n              data: {\n                message: message.data.message,\n                publicKey: message.data.publicKey,\n                signature,\n                callbackURL: message.data.callbackURL\n              },\n              wallet: message.wallet,\n              originalProtocolIdentifier: message.originalProtocolIdentifier\n            }\n          }\n        )\n      )\n\n      return actions.messagesSigned({ messages: signedMessages })\n    } catch (error) {\n      // tslint:disable-next-line: no-console\n      console.warn(error)\n\n      if (error.message?.toLowerCase().startsWith('secret not found')) {\n        return actions.secretNotFound()\n      } else if (error.message?.toLowerCase().startsWith('protocol not found')) {\n        return actions.protocolNotFound()\n      } else if (error.message?.toLowerCase().startsWith('invalid bip-39 passphrase')) {\n        return actions.invalidBip39Passphrase()\n      }\n\n      return actions.unknownError({ message: typeof error === 'string' ? error : error.message })\n    }\n  }\n\n  private async signMessage(\n    message: MessageSignRequest,\n    bip39Passphrase: string,\n    wallet?: AirGapWallet,\n    protocolIdentifier?: ProtocolSymbols\n  ): Promise<string> {\n    const secret: MnemonicSecret | undefined =\n      wallet !== undefined\n        ? this.secretsService.findByPublicKey(wallet.publicKey) ?? this.secretsService.getActiveSecret()\n        : this.secretsService.getActiveSecret()\n\n    if (secret === undefined) {\n      throw new Error('Secret not found')\n    }\n\n    const entropy: string = await this.secretsService.retrieveEntropyForSecret(secret)\n    const mnemonic: string = bip39.entropyToMnemonic(entropy)\n\n    if (wallet !== undefined) {\n      return this.keyPairService.signWithWallet(wallet, message, mnemonic, bip39Passphrase)\n    } else {\n      let protocol: ICoinProtocol | undefined\n      try {\n        protocol =\n          protocolIdentifier !== undefined ? await this.protocolService.getProtocol(protocolIdentifier, undefined, false) : undefined\n      } catch (error) {\n        // tslint:disable-next-line: no-console\n        console.warn(error)\n        protocol = undefined\n      }\n\n      if (protocol === undefined) {\n        throw new Error('Protocol not found')\n      }\n\n      return this.keyPairService.signWithProtocol(protocol, message, mnemonic, bip39Passphrase, false, protocol.standardDerivationPath)\n    }\n  }\n\n  private async navigateWithSignedTransactions(transactions: DeserializedSignedTransaction[]): Promise<void> {\n    const messages: IACMessageDefinitionObjectV3[] = await this.generateTransactionIACMessages(transactions)\n    this.interactionService.startInteraction({\n      operationType: InteractionOperationType.TRANSACTION_BROADCAST,\n      iacMessage: messages,\n      wallets: transactions.map((transaction: DeserializedSignedTransaction): AirGapWallet => transaction.wallet),\n      signedTxs: transactions.map((transaction: DeserializedSignedTransaction): string => transaction.data.transaction)\n    })\n  }\n\n  private async generateTransactionIACMessages(transactions: DeserializedSignedTransaction[]): Promise<IACMessageDefinitionObjectV3[]> {\n    const signResponses: IACMessageDefinitionObjectV3[] = transactions.map(\n      (transaction: DeserializedSignedTransaction): IACMessageDefinitionObjectV3 => ({\n        id: transaction.id,\n        protocol: transaction.originalProtocolIdentifier ?? transaction.wallet.protocol.identifier,\n        type: IACMessageType.TransactionSignResponse,\n        payload: {\n          accountIdentifier: transaction.data.accountIdentifier,\n          transaction: transaction.data.transaction,\n          from: flattenAirGapTxAddresses(transaction.details, 'from'),\n          to: flattenAirGapTxAddresses(transaction.details, 'to'),\n          amount: sumAirGapTxValues(transaction.details, 'amount'),\n          fee: sumAirGapTxValues(transaction.details, 'fee')\n        }\n      })\n    )\n    return signResponses\n  }\n\n  private async navigateWithSignedMessages(messages: DeserializedSignedMessage[]): Promise<void> {\n    const iacMessages: IACMessageDefinitionObjectV3[] = await this.generateIACMessages(messages)\n    this.interactionService.startInteraction({\n      operationType: InteractionOperationType.MESSAGE_SIGN_REQUEST,\n      iacMessage: iacMessages,\n      messageSignResponse:\n        messages[0] !== undefined\n          ? {\n            message: messages[0].data.message,\n            publicKey: messages[0].data.publicKey,\n            signature: messages[0].data.signature\n          }\n          : undefined\n    })\n  }\n\n  private async generateIACMessages(messages: DeserializedSignedMessage[]): Promise<IACMessageDefinitionObjectV3[]> {\n    const signResponses: IACMessageDefinitionObjectV3[] = messages.map(\n      (message: DeserializedSignedMessage): IACMessageDefinitionObjectV3 => ({\n        id: message.id,\n        protocol: message.originalProtocolIdentifier ?? message.protocol,\n        type: IACMessageType.MessageSignResponse,\n        payload: {\n          message: message.data.message,\n          publicKey: message.data.publicKey,\n          signature: message.data.signature\n        }\n      })\n    )\n    return signResponses\n  }\n\n  private async checkIfSaplingTransaction(transaction: UnsignedTransaction, protocolIdentifier: ProtocolSymbols): Promise<boolean> {\n    if (protocolIdentifier === MainProtocolSymbols.XTZ) {\n      const tezosProtocol: ICoinProtocol = await this.protocolService.getProtocol(protocolIdentifier)\n      const saplingProtocol: TezosSaplingProtocol = await this.getSaplingProtocol()\n\n      const txDetails: IAirGapTransaction[] = await tezosProtocol.getTransactionDetails(transaction)\n      const recipients: string[] = txDetails\n        .map((details) => details.to)\n        .reduce((flatten: string[], next: string[]) => flatten.concat(next), [])\n\n      return recipients.includes(saplingProtocol.options.config.contractAddress)\n    }\n\n    return protocolIdentifier === MainProtocolSymbols.XTZ_SHIELDED\n  }\n\n  private async getSaplingProtocol(): Promise<TezosSaplingProtocol> {\n    return (await this.protocolService.getProtocol(MainProtocolSymbols.XTZ_SHIELDED)) as TezosSaplingProtocol\n  }\n}\n","import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { RouterModule, Routes } from '@angular/router'\nimport { IonicModule } from '@ionic/angular'\nimport { EffectsModule } from '@ngrx/effects'\nimport { StoreModule } from '@ngrx/store'\nimport { TranslateModule } from '@ngx-translate/core'\n\nimport { ComponentsModule } from '../../components/components.module'\n\nimport { DeserializedDetailEffects } from './deserialized-detail.effects'\nimport { DeserializedDetailPage } from './deserialized-detail.page'\nimport * as fromDeserializedDetail from './deserialized-detail.reducer'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DeserializedDetailPage\n  }\n]\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ComponentsModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    TranslateModule,\n    StoreModule.forFeature('deserializedDetail', fromDeserializedDetail.reducer),\n    EffectsModule.forFeature([DeserializedDetailEffects])\n  ],\n  declarations: [DeserializedDetailPage]\n})\nexport class DeserializedDetailPageModule {}\n","import {\n  AirGapWallet,\n  IAirGapTransaction,\n  MessageSignRequest,\n  MessageSignResponse,\n  ProtocolSymbols,\n  SignedTransaction,\n  UnsignedTransaction\n} from '@airgap/coinlib-core'\n\nexport enum Mode {\n  SIGN_TRANSACTION = 0,\n  SIGN_MESSAGE = 1\n}\n\n/**************** Task ****************/\n\nexport type Task = 'signTransaction' | 'signMessage' | 'generic'\n\n/**************** Alert ****************/\n\nexport interface Bip39PassphraseAlert {\n  type: 'bip39Passphrase'\n}\n\nexport interface Bip39PassphraseErrorAlert {\n  type: 'bip39PassphraseError'\n}\n\nexport interface SecretNotFoundErrorAlert {\n  type: 'secretNotFound'\n}\n\nexport interface UnknownErrorAlert {\n  type: 'unknownError'\n  message?: string\n}\n\nexport type Alert = Bip39PassphraseAlert | Bip39PassphraseErrorAlert | SecretNotFoundErrorAlert | UnknownErrorAlert\n\n/**************** Modal ****************/\n\nexport type Modal = 'selectSigningAccount'\n\n/**************** DeserializedTransasction ****************/\n\nexport interface DeserializedUnsignedTransaction {\n  type: 'unsigned'\n  id: number\n  details: IAirGapTransaction[]\n  data: UnsignedTransaction\n  wallet: AirGapWallet\n  originalProtocolIdentifier?: ProtocolSymbols\n}\n\nexport interface DeserializedSignedTransaction {\n  type: 'signed'\n  id: number\n  details: IAirGapTransaction[]\n  data: SignedTransaction & Pick<UnsignedTransaction, 'callbackURL'>\n  wallet: AirGapWallet,\n  originalProtocolIdentifier?: ProtocolSymbols\n}\n\nexport type DeserializedTransaction = DeserializedUnsignedTransaction | DeserializedSignedTransaction\n\nexport function isDeserializedTransaction(data: unknown): data is DeserializedTransaction {\n  return data instanceof Object && 'type' in data && 'details' in data && 'data' in data && 'wallet' in data\n}\n\n/**************** DeserializedMessage ****************/\n\nexport interface DeserializedUnsignedMessage {\n  type: 'unsigned'\n  id: number\n  protocol: ProtocolSymbols | undefined\n  data: MessageSignRequest\n  blake2bHash: string | undefined\n  wallet: AirGapWallet | undefined\n  originalProtocolIdentifier?: ProtocolSymbols\n}\n\nexport interface DeserializedSignedMessage {\n  type: 'signed'\n  id: number\n  protocol: ProtocolSymbols | undefined\n  data: MessageSignResponse & Pick<MessageSignRequest, 'callbackURL'>\n  wallet: AirGapWallet | undefined\n  originalProtocolIdentifier?: ProtocolSymbols\n}\n\nexport type DeserializedMessage = DeserializedUnsignedMessage | DeserializedSignedMessage\n\n/**************** DeserializedPayload ****************/\n\nexport interface SignTransactionPayload {\n  mode: Mode.SIGN_TRANSACTION\n  data: DeserializedUnsignedTransaction[]\n}\n\nexport interface SignMessagePayload {\n  mode: Mode.SIGN_MESSAGE\n  data: DeserializedUnsignedMessage[]\n}\n\nexport type Payload = SignTransactionPayload | SignMessagePayload\n\n/**************** Resources ****************/\n\nexport interface UnsignedMessage {\n  data: string\n  blake2bHash?: string\n}\n","// tslint:disable: typedef\n// tslint:disable: max-file-line-count\nimport { assertNever, flattened, generateGUID, UIAction, UIActionStatus, UIResource, UIResourceStatus } from '@airgap/angular-core'\nimport { IAirGapTransaction } from '@airgap/coinlib-core'\nimport { createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store'\n\nimport * as fromRoot from '../../app.reducers'\n\nimport * as actions from './deserialized-detail.actions'\nimport {\n  Alert,\n  Bip39PassphraseAlert,\n  Bip39PassphraseErrorAlert,\n  DeserializedMessage,\n  DeserializedSignedTransaction,\n  DeserializedTransaction,\n  DeserializedUnsignedMessage,\n  DeserializedUnsignedTransaction,\n  Modal,\n  Mode,\n  Payload,\n  SecretNotFoundErrorAlert,\n  UnknownErrorAlert,\n  UnsignedMessage,\n  Task\n} from './deserialized.detail.types'\n\n/**************** STATE ****************/\n\nconst MAX_BIP39_PASSPHRASE_TRIES = 1\nexport interface FeatureState {\n  mode: Mode | undefined\n  title: string\n  button: string | undefined\n  // loader: UIAction<Task> | undefined\n  // FIXME [#210] replace with the above once the performance issue is resolved\n  loader: (UIAction<Task> & { userInput: actions.UserInput }) | undefined\n  // [#210]\n  alert: UIAction<Alert> | undefined\n  modal: UIAction<Modal> | undefined\n  transactions: UIResource<DeserializedTransaction[]>\n  messages: UIResource<DeserializedMessage[]>\n  raw: UIResource<string>\n  bip39PassphraseTries: number\n}\n\nexport interface State extends fromRoot.State {\n  deserializedDetail: FeatureState\n}\n\n/**************** Reducers ****************/\n\nconst initialState: FeatureState = {\n  mode: undefined,\n  title: '',\n  button: undefined,\n  loader: undefined,\n  alert: undefined,\n  modal: undefined,\n  transactions: {\n    value: undefined,\n    status: UIResourceStatus.IDLE\n  },\n  messages: {\n    value: undefined,\n    status: UIResourceStatus.IDLE\n  },\n  raw: {\n    value: undefined,\n    status: UIResourceStatus.IDLE\n  },\n  bip39PassphraseTries: 0\n}\n\nexport const reducer = createReducer(\n  initialState,\n  on(actions.navigationDataLoading, (state) => ({\n    ...state,\n    loader: undefined,\n    alert: undefined,\n    modal: undefined,\n    transactions: {\n      value: state.transactions.value,\n      status: UIResourceStatus.LOADING\n    },\n    messages: {\n      value: state.messages.value,\n      status: UIResourceStatus.LOADING\n    },\n    raw: {\n      value: state.raw.value,\n      status: UIResourceStatus.LOADING\n    }\n  })),\n  on(actions.navigationDataLoaded, (state, { mode, title, button, transactions, messages, raw }) => ({\n    ...state,\n    mode,\n    title,\n    button,\n    loader: undefined,\n    alert: undefined,\n    modal: undefined,\n    transactions: {\n      value: transactions,\n      status: UIResourceStatus.SUCCESS\n    },\n    messages: {\n      value: messages,\n      status: UIResourceStatus.SUCCESS\n    },\n    raw: {\n      value: raw,\n      status: UIResourceStatus.SUCCESS\n    }\n  })),\n  on(actions.navigationDataLoadingError, (state, { mode, title, button, raw }) => ({\n    ...state,\n    mode,\n    title,\n    button,\n    loader: undefined,\n    alert: undefined,\n    modal: undefined,\n    transactions: {\n      value: undefined,\n      status: UIResourceStatus.ERROR\n    },\n    messages: {\n      value: undefined,\n      status: UIResourceStatus.ERROR\n    },\n    raw: {\n      value: raw,\n      status: UIResourceStatus.SUCCESS\n    }\n  })),\n  on(actions.transactionsSigned, (state, { transactions }) => ({\n    ...state,\n    loader: undefined,\n    alert: undefined,\n    transactions: {\n      value: (state.transactions.value ?? []).concat(transactions),\n      status: state.transactions.status\n    }\n  })),\n  on(actions.messagesSigned, (state, { messages }) => ({\n    ...state,\n    loader: undefined,\n    alert: undefined,\n    modal: undefined,\n    messages: {\n      value: (state.messages.value ?? []).concat(messages),\n      status: state.transactions.status\n    }\n  })),\n  on(actions.loaderDismissed, (state, { id }) => ({\n    ...state,\n    loader:\n      state.loader !== undefined\n        ? {\n            id: state.loader.id,\n            value: state.loader.value,\n            status: id === state.loader.id ? UIActionStatus.HANDLED : state.loader.status,\n            userInput: id === state.loader.id ? {} : state.loader.userInput\n          }\n        : undefined\n  })),\n  on(actions.alertDismissed, (state, { id }) => ({\n    ...state,\n    alert:\n      state.alert !== undefined\n        ? {\n            id: state.alert.id,\n            value: state.alert.value,\n            status: id === state.alert.id ? UIActionStatus.HANDLED : state.alert.status\n          }\n        : undefined,\n    modal: undefined\n  })),\n  on(actions.modalDismissed, (state, { id }) => ({\n    ...state,\n    alert: undefined,\n    modal:\n      state.modal !== undefined\n        ? {\n            id: state.modal.id,\n            value: state.modal.value,\n            status: id === state.modal.id ? UIActionStatus.HANDLED : state.modal.status\n          }\n        : undefined\n  })),\n  on(actions.invalidBip39Passphrase, (state) => {\n    return state.bip39PassphraseTries < MAX_BIP39_PASSPHRASE_TRIES\n      ? {\n          ...state,\n          loader: undefined,\n          alert: {\n            id: generateGUID(),\n            value: { type: 'bip39Passphrase' as Bip39PassphraseAlert['type'] },\n            status: UIActionStatus.PENDING\n          },\n          modal: undefined,\n          bip39PassphraseTries: state.bip39PassphraseTries + 1\n        }\n      : {\n          ...state,\n          loader: undefined,\n          alert: {\n            id: generateGUID(),\n            value: { type: 'bip39PassphraseError' as Bip39PassphraseErrorAlert['type'] },\n            status: UIActionStatus.PENDING\n          },\n          modal: undefined,\n          bip39PassphraseTries: 0\n        }\n  }),\n  on(actions.secretNotFound, (state) => ({\n    ...state,\n    alert: {\n      id: generateGUID(),\n      value: { type: 'secretNotFound' as SecretNotFoundErrorAlert['type'] },\n      status: UIActionStatus.PENDING\n    },\n    modal: undefined\n  })),\n  on(actions.protocolNotFound, (state) => ({\n    ...state,\n    loader: undefined,\n    alert: undefined,\n    modal: {\n      id: generateGUID(),\n      value: 'selectSigningAccount' as Modal,\n      status: UIActionStatus.PENDING\n    }\n  })),\n  on(actions.runningBlockingTask, (state, { task, userInput }) => ({\n    ...state,\n    loader: {\n      id: generateGUID(),\n      value: task,\n      status: UIActionStatus.PENDING,\n      userInput\n    }\n  })),\n  on(actions.unknownError, (state, { message }) => ({\n    ...state,\n    loader: undefined,\n    alert: {\n      id: generateGUID(),\n      value: {\n        type: 'unknownError' as UnknownErrorAlert['type'],\n        message: message?.length > 0 ? message : undefined\n      },\n      status: UIActionStatus.PENDING\n    },\n    modal: undefined\n  }))\n)\n\n/**************** Selectors ****************/\n\nexport const selectFeatureState = createFeatureSelector<State, FeatureState>('deserializedDetail')\n\nexport const selectMode = createSelector(selectFeatureState, (state: FeatureState): FeatureState['mode'] => state.mode)\nexport const selectTitle = createSelector(selectFeatureState, (state: FeatureState): FeatureState['title'] => state.title)\nexport const selectButton = createSelector(selectFeatureState, (state: FeatureState): FeatureState['button'] => state.button)\nexport const selectLoader = createSelector(selectFeatureState, (state: FeatureState): FeatureState['loader'] => state.loader)\nexport const selectAlert = createSelector(selectFeatureState, (state: FeatureState): FeatureState['alert'] => state.alert)\nexport const selectModal = createSelector(selectFeatureState, (state: FeatureState): FeatureState['modal'] => state.modal)\n\nexport const selectTransactions = createSelector(\n  selectFeatureState,\n  (state: FeatureState): UIResource<DeserializedTransaction[]> | undefined => state.transactions\n)\n\nconst createSelectTransaction = <T extends DeserializedTransaction>(\n  type: DeserializedTransaction['type']\n): ((transactions: UIResource<DeserializedTransaction[]>) => UIResource<T[]>) => {\n  return (transactions: UIResource<DeserializedTransaction[]>): UIResource<T[]> => ({\n    value: transactions.value?.filter((transaction: DeserializedTransaction) => transaction.type === type) as T[],\n    status: transactions.status\n  })\n}\nexport const selectUnsignedTransactions = createSelector(\n  selectTransactions,\n  createSelectTransaction<DeserializedUnsignedTransaction>('unsigned')\n)\nexport const selectSignedTransactions = createSelector(selectTransactions, createSelectTransaction<DeserializedSignedTransaction>('signed'))\n\nconst getTransactionsDetails = (\n  transactions: UIResource<DeserializedTransaction[]>,\n  type?: DeserializedTransaction['type']\n): UIResource<IAirGapTransaction[]> => {\n  const details: IAirGapTransaction[][] | undefined = transactions.value\n    ?.filter((transaction: DeserializedTransaction) => (type !== undefined ? transaction.type === type : true))\n    .map((transaction: DeserializedTransaction) => transaction.details)\n\n  return {\n    value: details !== undefined ? flattened(details) : undefined,\n    status: transactions.status\n  }\n}\n\nexport const selectTransactionsDetails = createSelector(\n  selectMode,\n  selectTransactions,\n  (mode: Mode, transactions: UIResource<DeserializedTransaction[]>): UIResource<IAirGapTransaction[]> => {\n    switch (mode) {\n      case Mode.SIGN_TRANSACTION:\n        return getTransactionsDetails(transactions, 'unsigned')\n      default:\n        return {\n          value: undefined,\n          status: transactions.status\n        }\n    }\n  }\n)\nexport const selectUnsignedTransactionsDetails = createSelector(selectUnsignedTransactions, getTransactionsDetails)\nexport const selectSignedTransactionsDetails = createSelector(selectSignedTransactions, getTransactionsDetails)\n\nexport const selectMessages = createSelector(selectFeatureState, (state: FeatureState) => state.messages)\n\nconst createSelectMessage = <T extends DeserializedMessage>(\n  type: DeserializedMessage['type']\n): ((messages: UIResource<DeserializedMessage[]>) => UIResource<T[]>) => {\n  return (messages: UIResource<DeserializedMessage[]>): UIResource<T[]> => ({\n    value: messages.value?.filter((message: DeserializedMessage) => message.type === type) as T[],\n    status: messages.status\n  })\n}\n\nexport const selectUnsignedMessages = createSelector(selectMessages, createSelectMessage<DeserializedUnsignedMessage>('unsigned'))\n\nconst getMessagesData = (\n  messages: UIResource<DeserializedMessage[]>,\n  type?: DeserializedMessage['type']\n): UIResource<UnsignedMessage[]> => {\n  const details: UnsignedMessage[] | undefined = messages.value\n    ?.filter((message: DeserializedMessage) => (type !== undefined ? message.type === type : true))\n    .map((message: DeserializedMessage) => {\n      const blake2bHash: string | undefined = message.type === 'unsigned' ? message.blake2bHash : undefined\n\n      return { data: message.data.message, blake2bHash }\n    })\n\n  return {\n    value: details,\n    status: messages.status\n  }\n}\n\nexport const selectMessagesData = createSelector(\n  selectMode,\n  selectMessages,\n  (mode: Mode, messages: UIResource<DeserializedMessage[]>): UIResource<UnsignedMessage[]> => {\n    switch (mode) {\n      case Mode.SIGN_MESSAGE:\n        return getMessagesData(messages, 'unsigned')\n      default:\n        return {\n          value: undefined,\n          status: messages.status\n        }\n    }\n  }\n)\n\nexport const selectUnsignedMessagesData = createSelector(selectUnsignedMessages, getMessagesData)\n\nexport const selectRaw = createSelector(selectFeatureState, (state: FeatureState) => state.raw)\n\nexport const selectFinalPayload = createSelector(\n  selectMode,\n  selectUnsignedTransactions,\n  selectSignedTransactions,\n  selectUnsignedMessages,\n  (\n    mode: Mode,\n    unsignedTransactions: UIResource<DeserializedUnsignedTransaction[]>,\n    _signedTransactions: UIResource<DeserializedSignedTransaction[]>,\n    unsignedMessages: UIResource<DeserializedUnsignedMessage[]>\n  ): Payload => {\n    switch (mode) {\n      case Mode.SIGN_TRANSACTION:\n        return {\n          mode,\n          data: unsignedTransactions.value\n        }\n      case Mode.SIGN_MESSAGE:\n        return {\n          mode,\n          data: unsignedMessages.value\n        }\n      default:\n        assertNever('selectFinalPayload', mode)\n    }\n  }\n)\n"],"sourceRoot":"webpack:///"}