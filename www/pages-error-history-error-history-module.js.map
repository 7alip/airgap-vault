{"version":3,"sources":["./src/app/pages/error-history/error-history.page.ts","./src/app/pages/error-history/error-history.page.html","./src/app/pages/error-history/error-history.module.ts","./src/app/pages/error-history/error-history-routing.module.ts"],"names":[],"mappings":"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","file":"pages-error-history-error-history-module.js","sourcesContent":["import { ClipboardService } from '@airgap/angular-core'\nimport { Component, OnInit } from '@angular/core'\nimport { AlertController } from '@ionic/angular'\nimport { ErrorCategory, handleErrorLocal, LocalErrorLogger } from 'src/app/services/error-handler/error-handler.service'\n\ninterface ErrorObject {\n  date: number\n  title: string\n  detail: string\n  expanded: boolean\n}\n\n@Component({\n  selector: 'airgap-error-history',\n  templateUrl: './error-history.page.html',\n  styleUrls: ['./error-history.page.scss']\n})\nexport class ErrorHistoryPage implements OnInit {\n  public errorHistory: ErrorObject[] = []\n\n  constructor(private readonly alertController: AlertController, private readonly clipboardService: ClipboardService) {}\n\n  async ngOnInit() {\n    this.updateList()\n  }\n\n  async updateList() {\n    const logger = new LocalErrorLogger()\n    this.errorHistory = await (\n      await logger.getErrorHistory()\n    ).map((error) => ({\n      date: error[4],\n      title: error[2].split('\\n')[0],\n      detail: error[2],\n      expanded: false\n    }))\n  }\n\n  public async copyErrorHistory(): Promise<void> {\n    if (this.errorHistory.length > 0) {\n      const alert: HTMLIonAlertElement = await this.alertController.create({\n        header: 'Copy Error History',\n        subHeader: 'WARNING',\n        message:\n          '<b>It is possible that the error history contains your private keys, so you should ONLY use this feature if you are testing your device without any funds on it.</b><br /><br />If you encounter an error while using AirGap Vault, sending the developers your local error history could help them pinpoint the problem.<br /><br />Send this error history <b>only</b> to hi@airgap.it, along with a detailed description of your problem.',\n        inputs: [\n          {\n            name: 'understood',\n            type: 'checkbox',\n            label: 'I understand',\n            value: 'understood',\n            checked: false\n          }\n        ],\n        buttons: [\n          {\n            text: 'Cancel',\n            role: 'cancel'\n          },\n          {\n            text: 'Copy',\n            handler: async (result: string[]) => {\n              if (result.includes('understood')) {\n                const errorHistory = await new LocalErrorLogger().getErrorHistoryFormatted()\n                this.clipboardService.copyAndShowToast(errorHistory, 'Local error history copied to clipboard')\n              }\n            }\n          }\n        ]\n      })\n      alert.present().catch(handleErrorLocal(ErrorCategory.IONIC_ALERT))\n    } else {\n      return this.noErrors()\n    }\n  }\n\n  async noErrors() {\n    const alert: HTMLIonAlertElement = await this.alertController.create({\n      header: 'No errors',\n      message: `No recent errors occured, we can't copy anything to your clipboard.`,\n      buttons: [\n        {\n          text: 'Ok'\n        }\n      ]\n    })\n    alert.present().catch(handleErrorLocal(ErrorCategory.IONIC_ALERT))\n  }\n\n  async clearErrors() {\n    const alert: HTMLIonAlertElement = await this.alertController.create({\n      header: 'Clear errors',\n      message: `Do you want to clear your error history?`,\n      buttons: [\n        {\n          text: 'Ok',\n          handler: () => {\n            const logger = new LocalErrorLogger()\n            logger.clearAll()\n          }\n        }\n      ]\n    })\n    alert.present().catch(handleErrorLocal(ErrorCategory.IONIC_ALERT))\n\n    alert.onDidDismiss().then(() => {\n      this.updateList()\n    })\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"secondary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"/tabs/tab-settings\"></ion-back-button>\n    </ion-buttons>\n\n    <ion-title>Error History</ion-title>\n\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"copyErrorHistory()\">\n        <ion-icon slot=\"icon-only\" name=\"download\"></ion-icon>\n      </ion-button>\n      <ion-button (click)=\"clearErrors()\">\n        <ion-icon slot=\"icon-only\" name=\"trash\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-list>\n    <ion-card *ngIf=\" errorHistory.length === 0\">\n      <ion-card-content>Error list is empty! ðŸŽ‰</ion-card-content>\n    </ion-card>\n    <ion-card *ngFor=\"let error of errorHistory\" (click)=\"error.expanded = !error.expanded\">\n      <ion-item>\n        <ion-label>{{error.date | date: 'yyyy-MM-dd HH:mm'}}</ion-label>\n        <ion-button fill=\"outline\" slot=\"end\">Details</ion-button>\n      </ion-item>\n\n      <ion-card-content>\n        <ng-container *ngIf=\"!error.expanded\">{{error.title}}</ng-container>\n        <pre *ngIf=\"error.expanded\">{{error.detail}}</pre>\n      </ion-card-content>\n    </ion-card>\n  </ion-list>\n</ion-content>\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { FormsModule } from '@angular/forms'\n\nimport { IonicModule } from '@ionic/angular'\n\nimport { ErrorHistoryPageRoutingModule } from './error-history-routing.module'\n\nimport { ErrorHistoryPage } from './error-history.page'\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, ErrorHistoryPageRoutingModule],\n  declarations: [ErrorHistoryPage]\n})\nexport class ErrorHistoryPageModule {}\n","import { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\n\nimport { ErrorHistoryPage } from './error-history.page'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ErrorHistoryPage\n  }\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ErrorHistoryPageRoutingModule {}\n"],"sourceRoot":"webpack:///"}